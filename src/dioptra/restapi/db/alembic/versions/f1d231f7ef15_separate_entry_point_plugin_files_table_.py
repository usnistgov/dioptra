"""Separate entry_point_plugin_files table into 2 many-to-many tables

Revision ID: f1d231f7ef15
Revises: 6a75ede23821
Create Date: 2024-11-08 09:55:20.650243

"""

from typing import Annotated

import sqlalchemy as sa
from alembic import op
from sqlalchemy.orm import (
    DeclarativeBase,
    Mapped,
    MappedAsDataclass,
    mapped_column,
    sessionmaker,
)

# revision identifiers, used by Alembic.
revision = "f1d231f7ef15"
down_revision = "6a75ede23821"
branch_labels = None
depends_on = None


# Migration data models
intpk = Annotated[
    int,
    mapped_column(sa.BigInteger().with_variant(sa.Integer, "sqlite"), primary_key=True),
]
bigint = Annotated[
    int, mapped_column(sa.BigInteger().with_variant(sa.Integer, "sqlite"))
]
text_ = Annotated[str, mapped_column(sa.Text())]


class UpgradeBase(DeclarativeBase, MappedAsDataclass):
    pass


class DowngradeBase(DeclarativeBase, MappedAsDataclass):
    pass


class EntryPointPluginUpgrade(UpgradeBase):
    __tablename__ = "entry_point_plugins"

    # Database fields
    entry_point_resource_snapshot_id: Mapped[intpk]
    plugin_resource_snapshot_id: Mapped[intpk]


class EntryPointPluginFileUpgrade(UpgradeBase):
    __tablename__ = "entry_point_plugin_files"

    # Database fields
    entry_point_resource_snapshot_id: Mapped[intpk]
    plugin_resource_snapshot_id: Mapped[intpk]
    plugin_file_resource_snapshot_id: Mapped[intpk]


class PluginPluginFileUpgrade(UpgradeBase):
    __tablename__ = "plugin_plugin_files"

    # Database fields
    plugin_resource_snapshot_id: Mapped[intpk]
    plugin_file_resource_snapshot_id: Mapped[intpk]


class EntryPointPluginFileDowngrade(DowngradeBase):
    __tablename__ = "entry_point_plugin_files"

    # Database fields
    entry_point_resource_snapshot_id: Mapped[intpk]
    plugin_resource_snapshot_id: Mapped[intpk]
    plugin_file_resource_snapshot_id: Mapped[intpk]


class PluginPluginFileDowngrade(DowngradeBase):
    __tablename__ = "plugin_plugin_files"

    # Database fields
    plugin_resource_snapshot_id: Mapped[intpk]
    plugin_file_resource_snapshot_id: Mapped[intpk]


class EntryPointPluginDowngrade(DowngradeBase):
    __tablename__ = "entry_point_plugins"

    # Database fields
    entry_point_resource_snapshot_id: Mapped[intpk]
    plugin_resource_snapshot_id: Mapped[intpk]


def upgrade():
    bind = op.get_bind()
    Session = sessionmaker(bind=bind)

    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "entry_point_plugins",
        sa.Column(
            "entry_point_resource_snapshot_id",
            sa.BigInteger().with_variant(sa.Integer(), "sqlite"),
            nullable=False,
        ),
        sa.Column(
            "plugin_resource_snapshot_id",
            sa.BigInteger().with_variant(sa.Integer(), "sqlite"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["entry_point_resource_snapshot_id"],
            ["entry_points.resource_snapshot_id"],
            name=op.f(
                "fk_entry_point_plugins_entry_point_resource_snapshot_id_entry_points"
            ),
        ),
        sa.ForeignKeyConstraint(
            ["plugin_resource_snapshot_id"],
            ["plugins.resource_snapshot_id"],
            name=op.f("fk_entry_point_plugins_plugin_resource_snapshot_id_plugins"),
        ),
        sa.PrimaryKeyConstraint(
            "entry_point_resource_snapshot_id",
            "plugin_resource_snapshot_id",
            name=op.f("pk_entry_point_plugins"),
        ),
    )
    op.create_table(
        "plugin_plugin_files",
        sa.Column(
            "plugin_resource_snapshot_id",
            sa.BigInteger().with_variant(sa.Integer(), "sqlite"),
            nullable=False,
        ),
        sa.Column(
            "plugin_file_resource_snapshot_id",
            sa.BigInteger().with_variant(sa.Integer(), "sqlite"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["plugin_file_resource_snapshot_id"],
            ["plugin_files.resource_snapshot_id"],
            name=op.f(
                "fk_plugin_plugin_files_plugin_file_resource_snapshot_id_plugin_files"
            ),
        ),
        sa.ForeignKeyConstraint(
            ["plugin_resource_snapshot_id"],
            ["plugins.resource_snapshot_id"],
            name=op.f("fk_plugin_plugin_files_plugin_resource_snapshot_id_plugins"),
        ),
        sa.PrimaryKeyConstraint(
            "plugin_resource_snapshot_id",
            "plugin_file_resource_snapshot_id",
            name=op.f("pk_plugin_plugin_files"),
        ),
    )

    with Session() as session:
        entry_point_plugin_stmt = sa.select(
            EntryPointPluginFileUpgrade.entry_point_resource_snapshot_id,
            EntryPointPluginFileUpgrade.plugin_resource_snapshot_id,
        ).distinct()

        for row in session.execute(entry_point_plugin_stmt):
            session.add(
                EntryPointPluginUpgrade(
                    entry_point_resource_snapshot_id=row.entry_point_resource_snapshot_id,
                    plugin_resource_snapshot_id=row.plugin_resource_snapshot_id,
                )
            )

        plugin_plugin_files_stmt = sa.select(
            EntryPointPluginFileUpgrade.plugin_resource_snapshot_id,
            EntryPointPluginFileUpgrade.plugin_file_resource_snapshot_id,
        ).distinct()

        for row in session.execute(plugin_plugin_files_stmt):
            session.add(
                PluginPluginFileUpgrade(
                    plugin_resource_snapshot_id=row.plugin_resource_snapshot_id,
                    plugin_file_resource_snapshot_id=row.plugin_file_resource_snapshot_id,
                )
            )

        session.commit()

    op.drop_table("entry_point_plugin_files")
    # ### end Alembic commands ###


def downgrade():
    bind = op.get_bind()
    Session = sessionmaker(bind=bind)

    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "entry_point_plugin_files",
        sa.Column(
            "entry_point_resource_snapshot_id",
            sa.BigInteger().with_variant(sa.Integer(), "sqlite"),
            nullable=False,
        ),
        sa.Column(
            "plugin_resource_snapshot_id",
            sa.BigInteger().with_variant(sa.Integer(), "sqlite"),
            nullable=False,
        ),
        sa.Column(
            "plugin_file_resource_snapshot_id",
            sa.BigInteger().with_variant(sa.Integer(), "sqlite"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint(
            "entry_point_resource_snapshot_id",
            "plugin_resource_snapshot_id",
            "plugin_file_resource_snapshot_id",
            name=op.f("pk_entry_point_plugin_files"),
        ),
    )
    with op.batch_alter_table("entry_point_plugin_files", schema=None) as batch_op:
        batch_op.create_foreign_key(
            batch_op.f(
                "fk_entry_point_plugin_files_entry_point_resource_snapshot_id_entry_points"
            ),
            "entry_points",
            ["entry_point_resource_snapshot_id"],
            ["resource_snapshot_id"],
        )
        batch_op.create_foreign_key(
            batch_op.f(
                "fk_entry_point_plugin_files_plugin_file_resource_snapshot_id_plugin_files"
            ),
            "plugin_files",
            ["plugin_file_resource_snapshot_id"],
            ["resource_snapshot_id"],
        )
        batch_op.create_foreign_key(
            batch_op.f(
                "fk_entry_point_plugin_files_plugin_resource_snapshot_id_plugins"
            ),
            "plugins",
            ["plugin_resource_snapshot_id"],
            ["resource_snapshot_id"],
        )

    with Session() as session:
        entry_point_plugin_files_stmt = sa.select(
            EntryPointPluginDowngrade.entry_point_resource_snapshot_id,
            EntryPointPluginDowngrade.plugin_resource_snapshot_id,
            PluginPluginFileDowngrade.plugin_file_resource_snapshot_id,
        ).join_from(
            PluginPluginFileDowngrade,
            EntryPointPluginDowngrade,
            EntryPointPluginDowngrade.plugin_resource_snapshot_id
            == PluginPluginFileDowngrade.plugin_resource_snapshot_id,
        )

        for row in session.execute(entry_point_plugin_files_stmt):
            session.add(
                EntryPointPluginFileDowngrade(
                    entry_point_resource_snapshot_id=row.entry_point_resource_snapshot_id,
                    plugin_resource_snapshot_id=row.plugin_resource_snapshot_id,
                    plugin_file_resource_snapshot_id=row.plugin_file_resource_snapshot_id,
                )
            )

        session.commit()

    op.drop_table("plugin_plugin_files")
    op.drop_table("entry_point_plugins")
    # ### end Alembic commands ###
