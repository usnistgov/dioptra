types:
  callback:
  dataloader:
  directoryiterator:
  functiontype:
  kerasclassifier:
  metric:
  mlflowrun:
  model:
  modelversion:
  tuple:
  np.ndarray:
  optimizer:
  path:
  dataframe:
  rngenerator:
  sequential:
  tarfile:
  list_tuple_string_any:
    list: tuple_string_any
  list_union_metric_functiontype:
    list: union_metric_functiontype
  list_union_string_path:
    list: union_string_path
  list_mapping_string_string:
    list: mapping_string_string
  mapping_string_any:
    mapping: [string, any]
  mapping_string_number:
    mapping: [string, number]
  mapping_string_string:
    mapping: [string, string]
  tuple_integer_integer:
    tuple: [integer, integer]
  tuple_integer_integer_integer:
    tuple: [integer, integer, integer]
  tuple_string_any:
    tuple: [string, any]
  union_integer_number_string:
    union: [integer, number, string]
  union_integer_any:
    union: [integer, any]
  union_metric_functiontype:
    union: [metric, functiontype]
  union_null_list_tuple_string_any:
    union: [list_tuple_string_any , "null"]
  union_null_mapping_string_any:
    union: [mapping_string_any, "null"]
  union_null_modelversion:
    union: [modelversion, "null"]
  union_null_number:
    union: [number, "null"]
  union_null_string:
    union: [string, "null"]
  union_null_union_integer_any:
    union: [union_integer_any, "null"]
  union_string_path:
    union: [string, path]
  union_null_union_string_path:
    union: [union_string_path, "null"]

parameters:
  training_dir: /dioptra/data/Mnist/training
  testing_dir: /dioptra/data/Mnist/testing
  image_size: [28, 28, 1]
  adv_tar_name: testing_adversarial_fgm.tar.gz
  adv_data_dir: adv_testing
  model_name: mnist_le_net
  model_version: 1
  batch_size: 32
  theta: 0.01
  gamma: 1.0
  seed: -1
tasks: 
  init_rng:
    inputs:
      - name: seed
        required: false
        type: integer
    outputs:
      - seed: integer
      - rng: rngenerator
    plugin: dioptra_builtins.random.rng.init_rng
  draw_random_integer:
    inputs:
      - rng: rngenerator
      - name: low
        required: false
        type: integer
      - name: high
        required: false
        type: integer
    outputs:
      ret: integer
    plugin: dioptra_builtins.random.sample.draw_random_integer
  init_tensorflow:
    inputs:
      - seed: integer
    plugin: dioptra_builtins.backend_configs.tensorflow.init_tensorflow
  make_directories:
    inputs:
      - dirs: list_union_string_path
    plugin: dioptra_builtins.artifacts.utils.make_directories
  log_parameters:
    inputs:
      - parameters: mapping_string_number
    plugin: dioptra_builtins.tracking.mlflow.log_parameters
  get_distance_metric_list:
    plugin: dioptra_builtins.metrics.distance.get_distance_metric_list
    inputs:
      - request: list_mapping_string_string
    outputs:
      distance_metrics_list: list_tuple_string_any
  create_adversarial_jsma_dataset:
    inputs:
      - data_dir: string
      - model_name: string
      - model_version: integer
      - theta: number
      - gamma: number      
      - keras_classifier: kerasclassifier
      - name: adv_data_dir
        required: false
        type: union_null_union_string_path
      - name: rescale
        required: false
        type: number
      - name: batch_size
        required: false
        type: integer
      - name: label_mode
        required: false
        type: string
      - name: color_mode
        required: false
        type: string
      - name: image_size
        required: false
        type: tuple_integer_integer_integer
      - name: verbose
        required: false
        type: boolean
    outputs:
      ret: dataframe
    plugin: dioptra_custom.feature_squeezing.jsma_plugin.create_adversarial_jsma_dataset
  upload_directory_as_tarball_artifact:
    plugin: dioptra_builtins.artifacts.mlflow.upload_directory_as_tarball_artifact
    inputs:
      - source_dir: union_string_path
      - tarball_filename: string
      - name: tarball_write_mode
        type: string
        required: false
      - name: working_dir
        type: union_null_union_string_path
        required: false
  load_wrapped_tensorflow_keras_classifier:
      plugin: dioptra_builtins.registry.art.load_wrapped_tensorflow_keras_classifier
      inputs:
        - name: name
          type: string
          required: true
        - version: integer
        - name: classifier_kwargs
          type: mapping_string_any
          required: false
      outputs:
        classifier: kerasclassifier
  upload_data_frame_artifacts:
    plugin: dioptra_builtins.artifacts.mlflow.upload_data_frame_artifact
    inputs:
      - data_frame: dataframe
      - file_name: string
      - file_format: string
      - name: file_format_kwargs
        type: union_null_mapping_string_any
        required: false
      - name: working_dir
        type: union_null_union_string_path
        required: false
  prepend_cwd:
    plugin:
      dioptra_custom.evaluation.mlflow.prepend_cwd
    inputs:
      - path: string
    outputs: 
      ret: string
graph:
  init_rng:
    init_rng: $seed

  tensorflow_global_seed:
    draw_random_integer: $init_rng.rng

  dataset_seed:
    draw_random_integer: $init_rng.rng

  init_tensorflow_results:
    init_tensorflow: $tensorflow_global_seed

  adv_data_path:
    prepend_cwd: $adv_data_dir

  make_directories_results:
    make_directories: [[$adv_data_path]]

  log_mlflow_params_result:
    log_parameters:
      - entry_point_seed: $seed
        tensorflow_global_seed: $tensorflow_global_seed
        dataset_seed: $dataset_seed

  keras_classifier:
    load_wrapped_tensorflow_keras_classifier:
      name: $model_name
      version: $model_version
    dependencies: init_tensorflow_results

  distance_metrics_list:
    get_distance_metric_list:
      - - name: l_infinity_norm
          func: l_inf_norm
        - name: l_1_norm
          func: l_1_norm
        - name: l_2_norm
          func: l_2_norm
        - name: cosine_similarity
          func: paired_cosine_similarities
        - name: euclidean_distance
          func: paired_euclidean_distances
        - name: manhattan_distance
          func: paired_manhattan_distances
        - name: wasserstein_distance
          func: paired_wasserstein_distances

  distance_metrics:
    create_adversarial_jsma_dataset:
      model_name: $model_name
      model_version: $model_version
      data_dir: $testing_dir
      keras_classifier: $keras_classifier
      adv_data_dir: $adv_data_path
      batch_size: $batch_size
      image_size: $image_size
      theta: $theta
      gamma: $gamma
    dependencies: make_directories_results

  log_evasion_dataset_result:
    upload_directory_as_tarball_artifact:
        source_dir: $adv_data_path
        tarball_filename: $adv_tar_name
    dependencies: distance_metrics
  
  log_distance_metrics_result:
    upload_data_frame_artifacts:
      - $distance_metrics
      - distance_metrics.csv
      - csv.gz
      - index: false