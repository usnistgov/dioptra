types:
  rng:
  path:
  path_string:
    union: [string, any]
  path_string_null:
    union: [path_string, "null"]
  dirs:
    list: path_string
  parameters:
    mapping: [string, number]
  kwargs:
    mapping: [string, any]
  kwargs_null:
    union: [kwargs, "null"]
  keras_classifier:
  distance_metric_request:
    mapping: [string, string]
  distance_metrics_requests:
    list: 
      mapping: [string, string]
  distance_metric:
    tuple: [string, any]
  distance_metrics:
    list: 
      tuple: [string, any]
  distance_metrics_null:
    union: 
      - list: 
          tuple: [string, any]
      - "null"
  dataframe:
  image_size:
    tuple: [integer, integer, integer]
  clip_values:
    tuple: [float, float, float]
  norm:
    union: [integer, number, string]

parameters:
  data_dir: /dioptra/data/Mnist/testing
  image_size_p: [28, 28, 1]
  adv_tar_name: testing_adversarial_fgm.tar.gz
  adv_data_dir: adv_testing
  distance_metrics_filename: distance_metrics.csv
  training_job_id:
  clip_values_p: [0, 1]
  batch_size_p: 32
  eps_p: 0.3
  eps_step_p: 0.1
  minimal_p: false
  norm: "inf"
  seed_p: -1

tasks:
  load_dataset:
    plugin: dioptra_custom.fgm_mnist_demo.plugins.load_dataset
    inputs:
      - name: ep_seed
        type: integer
        required: false
      - name: data_dir
        type: string
        required: false
      - name: subset
        type: str_null
        required: false
      - name: image_size
        type: image_size
        required: false
      - name: rescale
        type: number
        required: false
      - name: validation_split
        type: num_null
        required: false
      - name: batch_size
        type: integer
        required: false
      - name: label_mode
        type: string
        required: false
      - name: shuffle
        type: boolean
        required: false
    outputs:
      dataset: directory_iterator

  get_model:
    plugin: dioptra_custom.fgm_mnist_demo.plugins.get_model
    inputs:
      - name: dataset
        type: directory_iterator
        required: false
      - name: model_architecture
        type: string
        required: false
      - name: input_shape
        type: image_size
        required: false
      - name: loss
        type: string
        required: false
      - name: learning_rate
        type: number
        required: false
      - name: optimizer
        type: string
        required: false
      - name: metrics_list
        type: metrics_list
        required: false
      - name: uri
        type: string
        required: false
      - name: imagenet_preprocessing
        type: boolean
        required: false
      - name: classifier_kwargs
        type: kwargs
        required: false
    outputs:
      classifier: sequential


  make_directories:
    plugin: dioptra_custom.vc.artifacts_utils.make_directories
    inputs:
      - dirs: dirs

  log_parameters:
    plugin: dioptra_custom.vc.tracking_mlflow.log_parameters
    inputs:
      - parameters: parameters

  load_wrapped_tensorflow_keras_classifier:
    plugin: dioptra_custom.vc.registry_art.load_wrapped_tensorflow_keras_classifier
    inputs:
      - artifact_uri: string
      - name: classifier_kwargs
        type: kwargs
        required: false
    outputs:
      classifier: keras_classifier

  get_distance_metric_list:
    plugin: dioptra_custom.vc.metrics_distance.get_distance_metric_list
    inputs:
      - request: distance_metrics_requests
    outputs:
      distance_metrics_list: distance_metrics

  create_adversarial_fgm_dataset:
    plugin: dioptra_custom.vc.attacks_fgm.create_adversarial_fgm_dataset
    inputs:
      - data_dir: string
      - adv_data_dir: path_string
      - keras_classifier: keras_classifier
      - image_size: image_size
      - name: distance_metrics_list
        type: distance_metrics_null
        required: false
      - name: rescale
        type: number
        required: false
      - name: batch_size
        type: integer
        required: false
      - name: label_mode
        type: string
        required: false
      - name: eps
        type: number
        required: false
      - name: eps_step
        type: number
        required: false
      - name: minimal
        type: boolean
        required: false
      - name: norm
        type: norm
        required: false
    outputs:
      dataset: dataframe

  upload_directory_as_tarball_artifact:
    plugin: dioptra_custom.vc.artifacts_mlflow.upload_directory_as_tarball_artifact
    inputs:
      - source_dir: path_string
      - tarball_filename: string
      - name: tarball_write_mode
        type: string
        required: false
      - name: working_dir
        type: path_string_null
        required: false

  upload_data_frame_artifact:
    plugin: dioptra_custom.vc.artifacts_mlflow.upload_data_frame_artifact
    inputs:
      - data_frame: dataframe
      - file_name: string
      - file_format: string
      - name: file_format_kwargs
        type: kwargs_null
        required: false
      - name: working_dir
        type: path_string_null
        required: false
  get_uri_for_artifact:
    plugin: dioptra_custom.vc.artifacts_restapi.get_uri_for_artifact
    inputs:
      - job_id: string
      - name: index
        type: integer
        required: false
    outputs:
      ret: string
  get_none:
    plugin: dioptra_custom.vc.tensorflow.get_none
    inputs:
      - arg: string
    outputs:
      ret: "null"
  process_float:
    plugin: dioptra_custom.vc.tensorflow.process_float
    inputs:
        - arg: string
    outputs:
      ret: number
  process_bool:
    plugin: dioptra_custom.vc.tensorflow.process_bool
    inputs:
        - arg: string
    outputs:
      ret: boolean
  process_int:
    plugin: dioptra_custom.vc.tensorflow.process_int
    inputs:
        - arg: string
    outputs:
      ret: integer
  process_int_list:
    plugin: dioptra_custom.vc.tensorflow.process_int_list
    inputs:
      - arg: string
    outputs:
      ret: image_size
  process_float_list:
    plugin: dioptra_custom.vc.tensorflow.process_float_list
    inputs:
      - arg: string
    outputs:
      ret: image_size

graph:
  image_size:
    process_int_list: $image_size_p

  clip_values:
    process_float_list: $clip_values_p

  batch_size:
    process_int: $batch_size_p

  eps:
    process_float: $eps_p

  eps_step:
    process_float: $eps_step_p

  minimal:
    process_bool: $minimal_p
    
  true_none:
    get_none: 'None'

  true_false:
    process_bool: 'False'

  seed:
    process_int: $seed_p

  init_rng:
    init_rng: $seed

  global_seed:
    draw_random_integer:
      rng: $init_rng.ret2

  dataset_seed:
    draw_random_integer:
      rng: $init_rng.ret2

  init_tensorflow_results:
    init_tensorflow: $global_seed

  make_directories_results:
    make_directories: [[$adv_data_dir]]

  log_mlflow_params_result:
    log_parameters:
      - entry_point_seed: $seed
        tensorflow_global_seed: $global_seed
        dataset_seed: $dataset_seed

  artifact_uri:
    get_uri_for_artifact:
      job_id: $training_job_id

  keras_classifier:
    load_wrapped_tensorflow_keras_classifier:
      artifact_uri: $artifact_uri
      classifier_kwargs:
        clip_values: $clip_values
    dependencies: init_tensorflow_results

  distance_metrics:
    get_distance_metric_list:
      - - name: l_infinity_norm
          func: l_inf_norm
        - name: l_1_norm
          func: l_1_norm
        - name: l_2_norm
          func: l_2_norm
        - name: cosine_similarity
          func: paired_cosine_similarities
        - name: euclidean_distance
          func: paired_euclidean_distances
        - name: manhattan_distance
          func: paired_manhattan_distances
        - name: wasserstein_distance
          func: paired_wasserstein_distances

  dataset:
    create_adversarial_fgm_dataset:
      data_dir: $data_dir
      keras_classifier: $keras_classifier
      distance_metrics_list: $distance_metrics
      adv_data_dir: $adv_data_dir
      batch_size: $batch_size
      image_size: $image_size
      eps: $eps
      eps_step: $eps_step
      minimal: $minimal
      norm: $norm
    dependencies: make_directories_results

  upload_directory:
    upload_directory_as_tarball_artifact:
      - $adv_data_dir
      - $adv_tar_name
    dependencies: dataset

  upload_dataset:
    upload_data_frame_artifact:
      data_frame: $dataset
      file_name: $distance_metrics_filename
      file_format: csv.gz
      file_format_kwargs:
        index: $true_false
