types:
  metrics_list:
    list: 
      mapping:
        name: string
        parameters:
          mapping: [string, any]
  callbacks_list:
    list: 
      mapping:
        name: string
        parameters:
          mapping: [string, any]
  directory_iterator:
  image_size:
    tuple: [integer, integer, integer]
  sequential:
  fit_kwargs_null:
    union:
      - mapping: [string, any]
      - "null"
  str_null:
    union: [string, "null"]
  num_null:
    union: [number, "null"]
  kwargs:
    mapping: [string, any]

parameters:
  seed_p: -1
  optimizer_name: Adam
  learning_rate_p: 0.001
  training_dir: /dioptra/data/Mnist/training
  testing_dir: /dioptra/data/Mnist/testing
  image_size_p: [28, 28, 1]
  validation_split_p: 0.2
  batch_size_p: 32
  model_architecture: le_net
  epochs_p: 30
  register_model_name: "mnist_classifier"

tasks:
  load_dataset:
    plugin: dioptra_custom.fgm_mnist_demo.plugins.load_dataset
    inputs:
      - name: ep_seed
        type: integer
        required: false
      - name: data_dir
        type: string
        required: false
      - name: subset
        type: str_null
        required: false
      - name: image_size
        type: image_size
        required: false
      - name: rescale
        type: number
        required: false
      - name: validation_split
        type: num_null
        required: false
      - name: batch_size
        type: integer
        required: false
      - name: label_mode
        type: string
        required: false
      - name: shuffle
        type: boolean
        required: false
    outputs:
      dataset: directory_iterator

  get_model:
    plugin: dioptra_custom.fgm_mnist_demo.plugins.get_model
    inputs:
      - name: dataset
        type: directory_iterator
        required: false
      - name: model_architecture
        type: string
        required: false
      - name: input_shape
        type: image_size
        required: false
      - name: loss
        type: string
        required: false
      - name: learning_rate
        type: number
        required: false
      - name: optimizer
        type: string
        required: false
      - name: metrics_list
        type: metrics_list
        required: false
      - name: uri
        type: string
        required: false
      - name: imagenet_preprocessing
        type: boolean
        required: false
      - name: classifier_kwargs
        type: kwargs
        required: false
    outputs:
      classifier: sequential

  train:
    plugin: dioptra_custom.fgm_mnist_demo.plugins.train
    inputs:
      - model_name: string
      - estimator: any
      - x: any
      - name: y
        type: any
        required: false
      - name: callbacks_list
        type: callbacks_list
        required: false
      - name: fit_kwargs
        type: fit_kwargs_null
        required: false
  compute_metrics:
    plugin: dioptra_custom.fgm_mnist_demo.plugins.compute_metrics
    inputs:
      - classifier: sequential
      - dataset: directory_iterator
  get_none:
    plugin: dioptra_custom.fgm_mnist_demo.tensorflow.get_none
    inputs:
      - arg: string
    outputs:
      ret: "null"
  process_float:
    plugin: dioptra_custom.fgm_mnist_demo.tensorflow.process_float
    inputs:
        - arg: string
    outputs:
      ret: number
  process_int:
    plugin: dioptra_custom.fgm_mnist_demo.tensorflow.process_int
    inputs:
        - arg: string
    outputs:
      ret: integer
  process_int_list:
    plugin: dioptra_custom.fgm_mnist_demo.tensorflow.process_int_list
    inputs:
      - arg: string
    outputs:
      ret: image_size
      
graph:
  batch_size:
    process_int: $batch_size_p

  epochs:
    process_int: $epochs_p

  validation_split:
    process_float: $validation_split_p

  true_none:
    get_none: 'h'

  image_size:
    process_int_list: $image_size_p

  learning_rate:
    process_float: $learning_rate_p

  seed:
    process_int: $seed_p
    
  training_data:
    load_dataset:
      ep_seed: $seed
      data_dir: $training_dir
      subset: training
      image_size: $image_size
      validation_split: $validation_split
      batch_size: $batch_size

  validation_data:
    load_dataset:
      ep_seed: $seed
      data_dir: $training_dir
      subset: validation
      image_size: $image_size
      validation_split: $validation_split
      batch_size: $batch_size

  testing_data:
    load_dataset:
      ep_seed: $seed
      data_dir: $testing_dir
      subset: null
      image_size: $image_size
      validation_split: $validation_split
      batch_size: $batch_size
      

  model:
    get_model:
      dataset: $training_data
      model_architecture: $model_architecture
      input_shape: $image_size
      learning_rate: $learning_rate
      optimizer: $optimizer_name
      metrics_list:
        - name: CategoricalAccuracy
          parameters: { name: accuracy }
        - name: Precision
          parameters: { name: precision }
        - name: Recall
          parameters: { name: recall }
        - name: AUC
          parameters: { name: auc }
    dependencies:
      - training_data

  training:
    train:
      model_name: $register_model_name
      estimator: $model
      x: $training_data
      callbacks_list:
        - name: EarlyStopping
          parameters:
            monitor: val_loss
            min_delta: .01
            patience: 5
            restore_best_weights: true
      fit_kwargs:
        nb_epochs: $epochs
        validation_data: $validation_data
        verbose: 2
    dependencies:
      - model

  metrics:
    compute_metrics:
      classifier: $model
      dataset: $testing_data
    dependencies:
      - training