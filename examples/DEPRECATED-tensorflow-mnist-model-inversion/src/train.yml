types:
  rng:
  optimizer:
  name_parameters:
    mapping:
      name: string
      parameters:
        mapping: [string, any]
  metrics_list:
    list: name_parameters
  performance_metrics:
  metrics:
  callbacks_in:
    list: name_parameters
  callbacks_out:
  directory_iterator:
  parameters:
    mapping: [string, number]
  image_size:
    tuple: [integer, integer, integer]
  sequential:
  fit_kwargs:
    mapping: [string, any]
  fit_kwargs_null:
    union: [fit_kwargs, "null"]
  str_null:
    union: [string, "null"]
  num_null:
    union: [number, "null"]

parameters:
  seed: -1
  optimizer_name: Adam
  learning_rate: 0.001
  training_dir: /nfs/data/training
  testing_dir: /nfs/data/testing
  image_size: [28, 28, 1]
  validation_split: 0.2
  batch_size: 32
  model_architecture: le_net
  epochs: 30
  register_model_name: ""

tasks:
  init_rng:
    plugin: dioptra_builtins.random.rng.init_rng
    inputs:
      - name: seed
        type: integer
        required: false
    outputs:
      - seed: integer
      - rng: rng

  draw_random:
    plugin: dioptra_builtins.random.sample.draw_random_integer
    inputs:
      - rng: rng
      - name: low
        type: integer
        required: false
      - name: high
        type: integer
        required: false
    outputs:
      value: integer

  init_tensorflow:
    plugin: dioptra_builtins.backend_configs.tensorflow.init_tensorflow
    inputs:
      - seed: integer

  log_params:
    plugin: dioptra_builtins.tracking.mlflow.log_parameters
    inputs:
      - parameters: parameters

  get_optimizer:
    plugin: dioptra_custom.evaluation.tensorflow.get_optimizer
    inputs:
      - name: name
        type: string
      - learning_rate: number
    outputs:
      optimizer: optimizer

  get_perf_metrics:
    plugin: dioptra_custom.evaluation.tensorflow.get_performance_metrics
    inputs:
      - metrics_list: metrics_list
    outputs:
      performance_metrics: performance_metrics

  get_callbacks:
    plugin: dioptra_custom.evaluation.tensorflow.get_model_callbacks
    inputs:
      - callbacks_list: callbacks_in
    outputs:
      callbacks: callbacks_out

  create_dataset:
    plugin: dioptra_builtins.data.tensorflow.create_image_dataset
    inputs:
      - data_dir: string
      - subset: str_null
      - image_size: image_size
      - seed: integer
      - name: rescale
        type: number
        required: false
      - name: validation_split
        type: num_null
        required: false
      - name: batch_size
        type: integer
        required: false
      - name: label_mode
        type: string
        required: false
    outputs:
      dataset: directory_iterator

  get_num_classes:
    plugin: dioptra_builtins.data.tensorflow.get_n_classes_from_directory_iterator
    inputs:
      - ds: directory_iterator
    outputs:
      num_classes: integer

  init_classifier:
    plugin: dioptra_builtins.estimators.keras_classifiers.init_classifier
    inputs:
      - model_architecture: string
      - optimizer: optimizer
      - metrics: performance_metrics
      - input_shape: image_size
      - n_classes: integer
      - name: loss
        type: string
        required: false
    outputs:
      classifier: sequential

  fit_model:
    plugin: dioptra_builtins.estimators.methods.fit
    inputs:
      - estimator: any
      - x: any
      - name: y
        type: any
        required: false
      - name: fit_kwargs
        type: fit_kwargs_null
        required: false

  eval_metrics_tensorflow:
    plugin: dioptra_custom.evaluation.tensorflow.evaluate_metrics_tensorflow
    inputs:
      - classifier: sequential
      - dataset: directory_iterator
    outputs:
      metrics: metrics

  log_metrics:
    plugin: dioptra_builtins.tracking.mlflow.log_metrics
    inputs:
      - metrics: metrics

  log_keras_estimator:
    plugin: dioptra_builtins.tracking.mlflow.log_tensorflow_keras_estimator
    inputs:
      - estimator: sequential
      - model_dir: string

  add_model_to_registry:
    plugin: dioptra_custom.evaluation.mlflow.add_model_to_registry
    inputs:
      - name: name
        type: string
      - model_dir: string

graph:
  init_rng:
    init_rng: $seed

  global_seed:
    draw_random: $init_rng.rng

  dataset_seed:
    draw_random: $init_rng.rng

  init_tensorflow:
    init_tensorflow: $global_seed

  log_params:
    log_params:
      - entry_point_seed: $init_rng.seed
        tensorflow_global_seed: $global_seed
        dataset_seed: $dataset_seed

  optimizer:
    get_optimizer: [$optimizer_name, $learning_rate]
    dependencies:
      - init_tensorflow

  perf_metrics:
    get_perf_metrics:
      - - name: CategoricalAccuracy
          parameters: { name: accuracy }
        - name: Precision
          parameters: { name: precision }
        - name: Recall
          parameters: { name: recall }
        - name: AUC
          parameters: { name: auc }
    dependencies:
      - init_tensorflow

  callbacks:
    get_callbacks:
      - - name: EarlyStopping
          parameters:
            monitor: val_loss
            min_delta: .01
            patience: 5
            restore_best_weights: true
    dependencies:
      - init_tensorflow

  training_dataset:
    create_dataset:
      data_dir: $training_dir
      subset: training
      image_size: $image_size
      seed: $dataset_seed
      validation_split: $validation_split
      batch_size: $batch_size
    dependencies:
      - init_tensorflow

  validation_dataset:
    create_dataset:
      data_dir: $training_dir
      subset: validation
      image_size: $image_size
      seed: $dataset_seed
      validation_split: $validation_split
      batch_size: $batch_size
    dependencies:
      - init_tensorflow

  testing_dataset:
    create_dataset:
      data_dir: $testing_dir
      subset: null
      image_size: $image_size
      seed: $dataset_seed
      validation_split: null
      batch_size: $batch_size
    dependencies:
      - init_tensorflow

  num_classes:
    get_num_classes: $training_dataset

  classifier:
    init_classifier:
      - $model_architecture
      - $optimizer
      - $perf_metrics
      - $image_size
      - $num_classes
    dependencies:
      - init_tensorflow

  model:
    fit_model:
      estimator: $classifier
      x: $training_dataset
      fit_kwargs:
        nb_epochs: $epochs
        validation_data: $validation_dataset
        callbacks: $callbacks
        verbose: 2

  eval_metrics_tensorflow:
    eval_metrics_tensorflow:
      - $classifier
      - $testing_dataset
    dependencies:
      - model

  log_metrics:
    log_metrics: $eval_metrics_tensorflow

  log_keras_estimator:
    log_keras_estimator:
      - $classifier
      - model
    dependencies:
      - model

  add_model_to_registry:
    add_model_to_registry:
      - $register_model_name
      - model
    dependencies:
      - log_keras_estimator
