openapi: 3.0.1
info:
  title: Dioptra REST API
  version: 0.0.0
servers:
- url: /
tags:
- name: Authentication
  description: Authentication endpoint
- name: Artifacts
  description: Artifacts endpoint
- name: Entrypoints
  description: Entrypoints endpoint
- name: Experiments
  description: Experiments endpoint
- name: Groups
  description: Groups endpoint
- name: Job
  description: Job endpoint
- name: Models
  description: Models endpoint
- name: PluginParameterTypes
  description: Plugin Parameter Types endpoint
- name: Plugins
  description: Plugins endpoint
- name: Queues
  description: Queues endpoint
- name: Tags
  description: Tags endpoint
- name: Users
  description: Users endpoint
- name: Workflows
  description: Workflows endpoint
paths:
  /api/v1/artifacts/:
    get:
      tags:
      - Artifacts
      summary: Gets a list of all Artifact resources
      operationId: get_artifact_endpoint
      parameters:
      - name: search
        in: query
        description: Search terms for the query (* and ? wildcards).
        schema:
          type: string
      - name: groupId
        in: query
        description: Filter results by the Group ID.
        schema:
          type: integer
      - name: index
        in: query
        description: Index of the current page.
        schema:
          type: integer
      - name: pageLength
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtifactPage'
    post:
      tags:
      - Artifacts
      summary: Creates an Artifact resource
      operationId: post_artifact_endpoint
      parameters:
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Artifact-load'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artifact-dump'
      x-codegen-request-body-name: payload
  /api/v1/artifacts/{id}:
    get:
      tags:
      - Artifacts
      summary: Gets an Artifact resource
      operationId: get_artifact_id_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the Artifact resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artifact-dump'
    put:
      tags:
      - Artifacts
      summary: Modifies an Artifact resource
      operationId: put_artifact_id_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the Artifact resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArtifactMutableFields'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artifact-dump'
      x-codegen-request-body-name: payload
  /api/v1/artifacts/{id}/snapshots:
    get:
      tags:
      - Artifacts
      summary: Gets the Snapshots for the resource
      operationId: get_resource_snapshots_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the artifact resource.
        required: true
        schema:
          type: integer
      - name: search
        in: query
        description: Search terms for the query (* and ? wildcards).
        schema:
          type: string
      - name: index
        in: query
        description: Index of the current page.
        schema:
          type: integer
      - name: pageLength
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotsArtifactPage'
  /api/v1/artifacts/{id}/snapshots/{snapshotId}:
    get:
      tags:
      - Artifacts
      summary: Gets a Snapshot for the resource by snapshot id
      operationId: get_resources_snapshots_id_endpoint
      parameters:
      - name: snapshotId
        in: path
        description: Snapshot ID for the artifact resource.
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: ID for the artifact resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotsIdArtifact-dump'
  /api/v1/auth/login:
    post:
      tags:
      - Authentication
      summary: Login to a registered user account
      operationId: post_login_resource
      parameters:
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login-load'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login-dump'
      x-codegen-request-body-name: payload
  /api/v1/auth/logout:
    post:
      tags:
      - Authentication
      summary: Logout the current user
      description: Must be logged in.
      operationId: post_logout_resource
      parameters:
      - name: everywhere
        in: query
        description: Logout on all devices.
        schema:
          type: boolean
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Logout-dump'
  /api/v1/entrypoints/:
    get:
      tags:
      - Entrypoints
      summary: Gets a list of Entrypoint resources matching the filter parameters
      operationId: get_entrypoint_endpoint
      parameters:
      - name: search
        in: query
        description: Search terms for the query (* and ? wildcards).
        schema:
          type: string
      - name: groupId
        in: query
        description: Filter results by the Group ID.
        schema:
          type: integer
      - name: index
        in: query
        description: Index of the current page.
        schema:
          type: integer
      - name: pageLength
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntrypointPage'
    post:
      tags:
      - Entrypoints
      summary: Creates an Entrypoint resource
      operationId: post_entrypoint_endpoint
      parameters:
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Entrypoint-load'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entrypoint-dump'
      x-codegen-request-body-name: payload
  /api/v1/entrypoints/drafts/:
    get:
      tags:
      - Entrypoints
      summary: Gets the Drafts for the resource
      operationId: get_resource_drafts_endpoint
      parameters:
      - name: draftType
        in: query
        description: "The type of drafts to return: all, existing, or new."
        schema:
          type: string
      - name: groupId
        in: query
        description: Filter results by the Group ID.
        schema:
          type: integer
      - name: index
        in: query
        description: Index of the current page.
        schema:
          type: integer
      - name: pageLength
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DraftPage'
    post:
      tags:
      - Entrypoints
      summary: Creates a Draft for the resource
      operationId: post_resource_drafts_endpoint
      parameters:
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DraftsEntrypointDraft-load'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Draft-dump'
      x-codegen-request-body-name: payload
  /api/v1/entrypoints/drafts/{draftId}:
    get:
      tags:
      - Entrypoints
      summary: Gets a Draft for the resource
      operationId: get_resources_drafts_id_endpoint
      parameters:
      - name: draftId
        in: path
        description: ID for the Draft of the entry_point resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Draft-dump'
    put:
      tags:
      - Entrypoints
      summary: Modifies a Draft for the resource
      operationId: put_resources_drafts_id_endpoint
      parameters:
      - name: draftId
        in: path
        description: ID for the Draft of the entry_point resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DraftsIdEntrypointDraft-load'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Draft-dump'
      x-codegen-request-body-name: payload
    delete:
      tags:
      - Entrypoints
      summary: Deletes a Draft for the resource
      operationId: delete_resources_drafts_id_endpoint
      parameters:
      - name: draftId
        in: path
        description: ID for the Draft of the entry_point resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdStatusResponse'
  /api/v1/entrypoints/{id}:
    get:
      tags:
      - Entrypoints
      summary: Gets an Entrypoint resource by its unique ID
      operationId: get_entrypoint_id_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the Entrypoint resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entrypoint-dump'
    put:
      tags:
      - Entrypoints
      summary: Modifies an Entrypoint resource by its unique ID
      operationId: put_entrypoint_id_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the Entrypoint resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntrypointMutableFields-load'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entrypoint-dump'
      x-codegen-request-body-name: payload
    delete:
      tags:
      - Entrypoints
      summary: Deletes an Entrypoint resource by its unique ID
      operationId: delete_entrypoint_id_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the Entrypoint resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdStatusResponse'
  /api/v1/entrypoints/{id}/draft:
    get:
      tags:
      - Entrypoints
      summary: Gets the Draft for this resource
      operationId: get_resources_id_draft_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Draft-dump'
    put:
      tags:
      - Entrypoints
      summary: Modifies the Draft for this resource
      operationId: put_resources_id_draft_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DraftEntrypointDraft-load'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Draft-dump'
      x-codegen-request-body-name: payload
    post:
      tags:
      - Entrypoints
      summary: Creates a Draft for this resource
      operationId: post_resources_id_draft_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DraftEntrypointDraft-load'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Draft-dump'
      x-codegen-request-body-name: payload
    delete:
      tags:
      - Entrypoints
      summary: Deletes the Draft for this resource
      operationId: delete_resources_id_draft_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdStatusResponse'
  /api/v1/entrypoints/{id}/plugins:
    get:
      tags:
      - Entrypoints
      summary: Retrieves the plugin snapshots for an entrypoint resource
      operationId: get_entrypoint_id_plugins_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the Entrypoint resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EntrypointPlugin'
    post:
      tags:
      - Entrypoints
      summary: Appends plugins to an entrypoint resource
      operationId: post_entrypoint_id_plugins_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the Entrypoint resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntrypointPluginMutableFields-load'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EntrypointPlugin'
      x-codegen-request-body-name: payload
  /api/v1/entrypoints/{id}/plugins/{pluginId}:
    get:
      tags:
      - Entrypoints
      summary: Retrieves a plugin snapshot for an entrypoint resource
      operationId: get_entrypoint_id_plugins_id_endpoint
      parameters:
      - name: pluginId
        in: path
        description: ID for the Plugin resource.
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: ID for the Entrypoint resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntrypointPlugin'
    delete:
      tags:
      - Entrypoints
      summary: Removes a plugin from an entrypoint by ID
      operationId: delete_entrypoint_id_plugins_id_endpoint
      parameters:
      - name: pluginId
        in: path
        description: ID for the Plugin resource.
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: ID for the Entrypoint resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdStatusResponse'
  /api/v1/entrypoints/{id}/queues:
    get:
      tags:
      - Entrypoints
      summary: Gets the list of Queues for the resource
      operationId: get_entrypoint_id_queues_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the Entrypoint resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/QueueRef'
    put:
      tags:
      - Entrypoints
      summary: Replaces one or more Queues to the resource
      operationId: put_entrypoint_id_queues_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the Entrypoint resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdList'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/QueueRef'
      x-codegen-request-body-name: payload
    post:
      tags:
      - Entrypoints
      summary: Appends one or more Queues to the resource
      operationId: post_entrypoint_id_queues_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the Entrypoint resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdList'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/QueueRef'
      x-codegen-request-body-name: payload
    delete:
      tags:
      - Entrypoints
      summary: Removes all Queues from the resource
      operationId: delete_entrypoint_id_queues_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the Entrypoint resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdStatusResponse'
  /api/v1/entrypoints/{id}/queues/{queueId}:
    delete:
      tags:
      - Entrypoints
      summary: Removes a Queue from the Entrypoint resource
      operationId: delete_entrypoint_id_queues_id
      parameters:
      - name: queueId
        in: path
        description: ID for the Queue resource.
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: ID for the Entrypoint resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdStatusResponse'
  /api/v1/entrypoints/{id}/snapshots:
    get:
      tags:
      - Entrypoints
      summary: Gets the Snapshots for the resource
      operationId: get_resource_snapshots_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the entry_point resource.
        required: true
        schema:
          type: integer
      - name: search
        in: query
        description: Search terms for the query (* and ? wildcards).
        schema:
          type: string
      - name: index
        in: query
        description: Index of the current page.
        schema:
          type: integer
      - name: pageLength
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotsEntrypointPage'
  /api/v1/entrypoints/{id}/snapshots/{snapshotId}:
    get:
      tags:
      - Entrypoints
      summary: Gets a Snapshot for the resource by snapshot id
      operationId: get_resources_snapshots_id_endpoint
      parameters:
      - name: snapshotId
        in: path
        description: Snapshot ID for the entry_point resource.
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: ID for the entry_point resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotsIdEntrypoint-dump'
  /api/v1/entrypoints/{id}/tags:
    get:
      tags:
      - Entrypoints
      summary: Gets the list of Tags for the resource
      operationId: get_resources_tags_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the entry_point.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TagRef-dump'
    put:
      tags:
      - Entrypoints
      summary: Replaces one or more Tags to the resource
      operationId: put_resources_tags_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the entry_point.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdList'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TagRef-dump'
      x-codegen-request-body-name: payload
    post:
      tags:
      - Entrypoints
      summary: Appends one or more Tags to the resource
      operationId: post_resources_tags_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the entry_point.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdList'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TagRef-dump'
      x-codegen-request-body-name: payload
    delete:
      tags:
      - Entrypoints
      summary: Removes all Tags from the resource
      operationId: delete_resources_tags_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the entry_point.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdStatusResponse'
  /api/v1/entrypoints/{id}/tags/{tagId}:
    delete:
      tags:
      - Entrypoints
      summary: Removes a Tag from the resource
      operationId: delete_resources_tags_id_endpoint
      parameters:
      - name: tagId
        in: path
        description: ID for the Tag.
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: ID for the entry_point.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdStatusResponse'
  /api/v1/experiments/:
    get:
      tags:
      - Experiments
      summary: Gets a page of Experiment resources matching the filter parameters
      operationId: get_experiment_endpoint
      parameters:
      - name: search
        in: query
        description: Search terms for the query (* and ? wildcards).
        schema:
          type: string
      - name: groupId
        in: query
        description: Filter results by the Group ID.
        schema:
          type: integer
      - name: index
        in: query
        description: Index of the current page.
        schema:
          type: integer
      - name: pageLength
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExperimentPage'
    post:
      tags:
      - Experiments
      summary: Creates an Experiment resource with a provided name
      operationId: post_experiment_endpoint
      parameters:
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Experiment-load'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experiment-dump'
      x-codegen-request-body-name: payload
  /api/v1/experiments/drafts/:
    get:
      tags:
      - Experiments
      summary: Gets the Drafts for the resource
      operationId: get_resource_drafts_endpoint
      parameters:
      - name: draftType
        in: query
        description: "The type of drafts to return: all, existing, or new."
        schema:
          type: string
      - name: groupId
        in: query
        description: Filter results by the Group ID.
        schema:
          type: integer
      - name: index
        in: query
        description: Index of the current page.
        schema:
          type: integer
      - name: pageLength
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DraftPage'
    post:
      tags:
      - Experiments
      summary: Creates a Draft for the resource
      operationId: post_resource_drafts_endpoint
      parameters:
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DraftsExperimentDraft-load'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Draft-dump'
      x-codegen-request-body-name: payload
  /api/v1/experiments/drafts/{draftId}:
    get:
      tags:
      - Experiments
      summary: Gets a Draft for the resource
      operationId: get_resources_drafts_id_endpoint
      parameters:
      - name: draftId
        in: path
        description: ID for the Draft of the experiment resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Draft-dump'
    put:
      tags:
      - Experiments
      summary: Modifies a Draft for the resource
      operationId: put_resources_drafts_id_endpoint
      parameters:
      - name: draftId
        in: path
        description: ID for the Draft of the experiment resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DraftsIdExperimentDraft-load'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Draft-dump'
      x-codegen-request-body-name: payload
    delete:
      tags:
      - Experiments
      summary: Deletes a Draft for the resource
      operationId: delete_resources_drafts_id_endpoint
      parameters:
      - name: draftId
        in: path
        description: ID for the Draft of the experiment resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdStatusResponse'
  /api/v1/experiments/{id}:
    get:
      tags:
      - Experiments
      summary: Gets an experiment by its unique identifier
      operationId: get_experiment_id_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the Experiment resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experiment-dump'
    put:
      tags:
      - Experiments
      summary: Modifies an experiment by its unique identifier
      operationId: put_experiment_id_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the Experiment resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExperimentMutableFields-load'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experiment-dump'
      x-codegen-request-body-name: payload
    delete:
      tags:
      - Experiments
      summary: Deletes an experiment by its unique identifier
      operationId: delete_experiment_id_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the Experiment resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdStatusResponse'
  /api/v1/experiments/{id}/draft:
    get:
      tags:
      - Experiments
      summary: Gets the Draft for this resource
      operationId: get_resources_id_draft_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Draft-dump'
    put:
      tags:
      - Experiments
      summary: Modifies the Draft for this resource
      operationId: put_resources_id_draft_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DraftExperimentDraft-load'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Draft-dump'
      x-codegen-request-body-name: payload
    post:
      tags:
      - Experiments
      summary: Creates a Draft for this resource
      operationId: post_resources_id_draft_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DraftExperimentDraft-load'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Draft-dump'
      x-codegen-request-body-name: payload
    delete:
      tags:
      - Experiments
      summary: Deletes the Draft for this resource
      operationId: delete_resources_id_draft_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdStatusResponse'
  /api/v1/experiments/{id}/entrypoints:
    get:
      tags:
      - Experiments
      summary: Gets the list of Entrypoints for the resource
      operationId: get_experiment_id_entrypoints_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the Experiment resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EntrypointRef'
    put:
      tags:
      - Experiments
      summary: Replaces one or more Entrypoints to the resource
      operationId: put_experiment_id_entrypoints_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the Experiment resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdList'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EntrypointRef'
      x-codegen-request-body-name: payload
    post:
      tags:
      - Experiments
      summary: Appends one or more Entrypoints to the resource
      operationId: post_experiment_id_entrypoints_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the Experiment resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdList'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EntrypointRef'
      x-codegen-request-body-name: payload
    delete:
      tags:
      - Experiments
      summary: Removes all Entrypoints from the resource
      operationId: delete_experiment_id_entrypoints_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the Experiment resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdStatusResponse'
  /api/v1/experiments/{id}/entrypoints/{entrypointId}:
    delete:
      tags:
      - Experiments
      summary: Removes a Entrypoint from the Experiment resource
      operationId: delete_experiment_id_entrypoints_id
      parameters:
      - name: entrypointId
        in: path
        description: ID for the Entrypoint resource.
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: ID for the Experiment resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdStatusResponse'
  /api/v1/experiments/{id}/jobs:
    get:
      tags:
      - Experiments
      summary: Returns a list of jobs for a specified Experiment
      operationId: get_experiment_id_job_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the Experiment resource.
        required: true
        schema:
          type: integer
      - name: search
        in: query
        description: Search terms for the query (* and ? wildcards).
        schema:
          type: string
      - name: index
        in: query
        description: Index of the current page.
        schema:
          type: integer
      - name: pageLength
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobPage'
    post:
      tags:
      - Experiments
      summary: Creates a Job resource under the specified Experiment
      operationId: post_experiment_id_job_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the Experiment resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job-load'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job-dump'
      x-codegen-request-body-name: payload
  /api/v1/experiments/{id}/jobs/{jobId}:
    get:
      tags:
      - Experiments
      summary: Gets a Job resource
      operationId: get_experiment_id_job_id_endpoint
      parameters:
      - name: jobId
        in: path
        description: ID for the Job resource.
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: ID for the Experiment resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job-dump'
    delete:
      tags:
      - Experiments
      summary: Deletes a Job resource
      operationId: delete_experiment_id_job_id_endpoint
      parameters:
      - name: jobId
        in: path
        description: ID for the Job resource.
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: ID for the Experiment resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdStatusResponse'
  /api/v1/experiments/{id}/jobs/{jobId}/artifacts:
    post:
      tags:
      - Experiments
      summary: Creates an Artifact resource
      operationId: post_experiment_id_job_id_artifacts_endpoint
      parameters:
      - name: jobId
        in: path
        description: ID for the Job resource.
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: ID for the Experiment resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobArtifactSchema-load'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artifact-dump'
      x-codegen-request-body-name: payload
  /api/v1/experiments/{id}/jobs/{jobId}/mlflowRun:
    get:
      tags:
      - Experiments
      summary: Gets a Job resource's mlflow run id
      operationId: get_experiment_id_job_id_mlflowrun_endpoint
      parameters:
      - name: jobId
        in: path
        description: ID for the Job resource.
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: ID for the Experiment resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobMlflowRun'
    post:
      tags:
      - Experiments
      summary: Sets the mlflow run id for a Job
      operationId: post_experiment_id_job_id_mlflowrun_endpoint
      parameters:
      - name: jobId
        in: path
        description: ID for the Job resource.
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: ID for the Experiment resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobMlflowRun'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobMlflowRun'
      x-codegen-request-body-name: payload
  /api/v1/experiments/{id}/jobs/{jobId}/status:
    get:
      tags:
      - Experiments
      summary: Gets a Job resource's status
      operationId: get_experiment_id_job_id_status_endpoint
      parameters:
      - name: jobId
        in: path
        description: ID for the Job resource.
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: ID for the Experiment resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobStatus-dump'
    put:
      tags:
      - Experiments
      summary: Modifies a Job resource's status
      operationId: put_experiment_id_job_id_status_endpoint
      parameters:
      - name: jobId
        in: path
        description: ID for the Job resource.
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: ID for the Experiment resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobStatus-load'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobStatus-dump'
      x-codegen-request-body-name: payload
  /api/v1/experiments/{id}/snapshots:
    get:
      tags:
      - Experiments
      summary: Gets the Snapshots for the resource
      operationId: get_resource_snapshots_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the experiment resource.
        required: true
        schema:
          type: integer
      - name: search
        in: query
        description: Search terms for the query (* and ? wildcards).
        schema:
          type: string
      - name: index
        in: query
        description: Index of the current page.
        schema:
          type: integer
      - name: pageLength
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotsExperimentPage'
  /api/v1/experiments/{id}/snapshots/{snapshotId}:
    get:
      tags:
      - Experiments
      summary: Gets a Snapshot for the resource by snapshot id
      operationId: get_resources_snapshots_id_endpoint
      parameters:
      - name: snapshotId
        in: path
        description: Snapshot ID for the experiment resource.
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: ID for the experiment resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotsIdExperiment-dump'
  /api/v1/experiments/{id}/tags:
    get:
      tags:
      - Experiments
      summary: Gets the list of Tags for the resource
      operationId: get_resources_tags_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the experiment.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TagRef-dump'
    put:
      tags:
      - Experiments
      summary: Replaces one or more Tags to the resource
      operationId: put_resources_tags_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the experiment.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdList'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TagRef-dump'
      x-codegen-request-body-name: payload
    post:
      tags:
      - Experiments
      summary: Appends one or more Tags to the resource
      operationId: post_resources_tags_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the experiment.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdList'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TagRef-dump'
      x-codegen-request-body-name: payload
    delete:
      tags:
      - Experiments
      summary: Removes all Tags from the resource
      operationId: delete_resources_tags_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the experiment.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdStatusResponse'
  /api/v1/experiments/{id}/tags/{tagId}:
    delete:
      tags:
      - Experiments
      summary: Removes a Tag from the resource
      operationId: delete_resources_tags_id_endpoint
      parameters:
      - name: tagId
        in: path
        description: ID for the Tag.
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: ID for the experiment.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdStatusResponse'
  /api/v1/groups/:
    get:
      tags:
      - Groups
      summary: Gets a list of all Group resources
      operationId: get_group_endpoint
      parameters:
      - name: search
        in: query
        description: Search terms for the query (* and ? wildcards).
        schema:
          type: string
      - name: index
        in: query
        description: Index of the current page.
        schema:
          type: integer
      - name: pageLength
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupPage'
  /api/v1/groups/{id}:
    get:
      tags:
      - Groups
      summary: Gets a Group resource
      operationId: get_group_id_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the Group resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group-dump'
  /api/v1/jobs/:
    get:
      tags:
      - Job
      summary: Gets a list of all Job resources
      operationId: get_job_endpoint
      parameters:
      - name: search
        in: query
        description: Search terms for the query (* and ? wildcards).
        schema:
          type: string
      - name: groupId
        in: query
        description: Filter results by the Group ID.
        schema:
          type: integer
      - name: index
        in: query
        description: Index of the current page.
        schema:
          type: integer
      - name: pageLength
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobPage'
  /api/v1/jobs/{id}:
    get:
      tags:
      - Job
      summary: Gets a Job resource
      operationId: get_job_id_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the Job resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job-dump'
    delete:
      tags:
      - Job
      summary: Deletes a Job resource
      operationId: delete_job_id_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the Job resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdStatusResponse'
  /api/v1/jobs/{id}/mlflowRun:
    get:
      tags:
      - Job
      summary: Gets a Job resource's mlflow run id
      operationId: get_job_id_mlflowrun_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the Job resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobMlflowRun'
    post:
      tags:
      - Job
      summary: Sets the mlflow run id for a Job
      operationId: post_job_id_mlflowrun_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the Job resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobMlflowRun'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobMlflowRun'
      x-codegen-request-body-name: payload
  /api/v1/jobs/{id}/snapshots:
    get:
      tags:
      - Job
      summary: Gets the Snapshots for the resource
      operationId: get_resource_snapshots_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the job resource.
        required: true
        schema:
          type: integer
      - name: search
        in: query
        description: Search terms for the query (* and ? wildcards).
        schema:
          type: string
      - name: index
        in: query
        description: Index of the current page.
        schema:
          type: integer
      - name: pageLength
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotsJobPage'
  /api/v1/jobs/{id}/snapshots/{snapshotId}:
    get:
      tags:
      - Job
      summary: Gets a Snapshot for the resource by snapshot id
      operationId: get_resources_snapshots_id_endpoint
      parameters:
      - name: snapshotId
        in: path
        description: Snapshot ID for the job resource.
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: ID for the job resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotsIdJob-dump'
  /api/v1/jobs/{id}/status:
    get:
      tags:
      - Job
      summary: Gets a Job resource's status
      operationId: get_job_id_status_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the Job resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobStatus-dump'
  /api/v1/jobs/{id}/tags:
    get:
      tags:
      - Job
      summary: Gets the list of Tags for the resource
      operationId: get_resources_tags_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the job.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TagRef-dump'
    put:
      tags:
      - Job
      summary: Replaces one or more Tags to the resource
      operationId: put_resources_tags_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the job.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdList'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TagRef-dump'
      x-codegen-request-body-name: payload
    post:
      tags:
      - Job
      summary: Appends one or more Tags to the resource
      operationId: post_resources_tags_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the job.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdList'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TagRef-dump'
      x-codegen-request-body-name: payload
    delete:
      tags:
      - Job
      summary: Removes all Tags from the resource
      operationId: delete_resources_tags_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the job.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdStatusResponse'
  /api/v1/jobs/{id}/tags/{tagId}:
    delete:
      tags:
      - Job
      summary: Removes a Tag from the resource
      operationId: delete_resources_tags_id_endpoint
      parameters:
      - name: tagId
        in: path
        description: ID for the Tag.
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: ID for the job.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdStatusResponse'
  /api/v1/models/:
    get:
      tags:
      - Models
      summary: Gets a list of all Model resources
      operationId: get_model_endpoint
      parameters:
      - name: search
        in: query
        description: Search terms for the query (* and ? wildcards).
        schema:
          type: string
      - name: groupId
        in: query
        description: Filter results by the Group ID.
        schema:
          type: integer
      - name: index
        in: query
        description: Index of the current page.
        schema:
          type: integer
      - name: pageLength
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelPage'
    post:
      tags:
      - Models
      summary: Creates a Model resource
      operationId: post_model_endpoint
      parameters:
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Model-load'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Model-dump'
      x-codegen-request-body-name: payload
  /api/v1/models/drafts/:
    get:
      tags:
      - Models
      summary: Gets the Drafts for the resource
      operationId: get_resource_drafts_endpoint
      parameters:
      - name: draftType
        in: query
        description: "The type of drafts to return: all, existing, or new."
        schema:
          type: string
      - name: groupId
        in: query
        description: Filter results by the Group ID.
        schema:
          type: integer
      - name: index
        in: query
        description: Index of the current page.
        schema:
          type: integer
      - name: pageLength
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DraftPage'
    post:
      tags:
      - Models
      summary: Creates a Draft for the resource
      operationId: post_resource_drafts_endpoint
      parameters:
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DraftsModel-load'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Draft-dump'
      x-codegen-request-body-name: payload
  /api/v1/models/drafts/{draftId}:
    get:
      tags:
      - Models
      summary: Gets a Draft for the resource
      operationId: get_resources_drafts_id_endpoint
      parameters:
      - name: draftId
        in: path
        description: ID for the Draft of the ml_model resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Draft-dump'
    put:
      tags:
      - Models
      summary: Modifies a Draft for the resource
      operationId: put_resources_drafts_id_endpoint
      parameters:
      - name: draftId
        in: path
        description: ID for the Draft of the ml_model resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DraftsIdModel-load'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Draft-dump'
      x-codegen-request-body-name: payload
    delete:
      tags:
      - Models
      summary: Deletes a Draft for the resource
      operationId: delete_resources_drafts_id_endpoint
      parameters:
      - name: draftId
        in: path
        description: ID for the Draft of the ml_model resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdStatusResponse'
  /api/v1/models/{id}:
    get:
      tags:
      - Models
      summary: Gets a Model resource
      operationId: get_model_id_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the Model resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Model-dump'
    put:
      tags:
      - Models
      summary: Modifies a Model resource
      operationId: put_model_id_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the Model resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelMutableFields'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Model-dump'
      x-codegen-request-body-name: payload
    delete:
      tags:
      - Models
      summary: Deletes a Model resource
      operationId: delete_model_id_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the Model resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdStatusResponse'
  /api/v1/models/{id}/draft:
    get:
      tags:
      - Models
      summary: Gets the Draft for this resource
      operationId: get_resources_id_draft_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Draft-dump'
    put:
      tags:
      - Models
      summary: Modifies the Draft for this resource
      operationId: put_resources_id_draft_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DraftModel-load'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Draft-dump'
      x-codegen-request-body-name: payload
    post:
      tags:
      - Models
      summary: Creates a Draft for this resource
      operationId: post_resources_id_draft_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DraftModel-load'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Draft-dump'
      x-codegen-request-body-name: payload
    delete:
      tags:
      - Models
      summary: Deletes the Draft for this resource
      operationId: delete_resources_id_draft_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdStatusResponse'
  /api/v1/models/{id}/snapshots:
    get:
      tags:
      - Models
      summary: Gets the Snapshots for the resource
      operationId: get_resource_snapshots_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the ml_model resource.
        required: true
        schema:
          type: integer
      - name: search
        in: query
        description: Search terms for the query (* and ? wildcards).
        schema:
          type: string
      - name: index
        in: query
        description: Index of the current page.
        schema:
          type: integer
      - name: pageLength
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotsModelPage'
  /api/v1/models/{id}/snapshots/{snapshotId}:
    get:
      tags:
      - Models
      summary: Gets a Snapshot for the resource by snapshot id
      operationId: get_resources_snapshots_id_endpoint
      parameters:
      - name: snapshotId
        in: path
        description: Snapshot ID for the ml_model resource.
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: ID for the ml_model resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotsIdModel-dump'
  /api/v1/models/{id}/tags:
    get:
      tags:
      - Models
      summary: Gets the list of Tags for the resource
      operationId: get_resources_tags_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the ml_model.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TagRef-dump'
    put:
      tags:
      - Models
      summary: Replaces one or more Tags to the resource
      operationId: put_resources_tags_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the ml_model.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdList'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TagRef-dump'
      x-codegen-request-body-name: payload
    post:
      tags:
      - Models
      summary: Appends one or more Tags to the resource
      operationId: post_resources_tags_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the ml_model.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdList'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TagRef-dump'
      x-codegen-request-body-name: payload
    delete:
      tags:
      - Models
      summary: Removes all Tags from the resource
      operationId: delete_resources_tags_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the ml_model.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdStatusResponse'
  /api/v1/models/{id}/tags/{tagId}:
    delete:
      tags:
      - Models
      summary: Removes a Tag from the resource
      operationId: delete_resources_tags_id_endpoint
      parameters:
      - name: tagId
        in: path
        description: ID for the Tag.
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: ID for the ml_model.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdStatusResponse'
  /api/v1/models/{id}/versions:
    get:
      tags:
      - Models
      summary: Gets a list of versions of this Model resource
      operationId: get_model_id_versions_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the Models resource.
        required: true
        schema:
          type: integer
      - name: search
        in: query
        description: Search terms for the query (* and ? wildcards).
        schema:
          type: string
      - name: index
        in: query
        description: Index of the current page.
        schema:
          type: integer
      - name: pageLength
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelVersionPage'
    post:
      tags:
      - Models
      summary: Creates a new version of the model resource
      operationId: post_model_id_versions_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the Models resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelVersion-load'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelVersion-dump'
      x-codegen-request-body-name: payload
  /api/v1/models/{id}/versions/{versionNumber}:
    get:
      tags:
      - Models
      summary: Gets a specific version of a model by version number
      operationId: get_model_id_versions_number_endpoint
      parameters:
      - name: versionNumber
        in: path
        description: Version number for the Model resource.
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: ID for the Model resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelVersion-dump'
    put:
      tags:
      - Models
      summary: Modifies specific version of the model resource
      operationId: put_model_id_versions_number_endpoint
      parameters:
      - name: versionNumber
        in: path
        description: Version number for the Model resource.
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: ID for the Model resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelVersionMutableFields'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelVersion-dump'
      x-codegen-request-body-name: payload
  /api/v1/pluginParameterTypes/:
    get:
      tags:
      - PluginParameterTypes
      summary: Gets a list of all PluginParameterType resources
      operationId: get_plugin_parameter_type_endpoint
      parameters:
      - name: search
        in: query
        description: Search terms for the query (* and ? wildcards).
        schema:
          type: string
      - name: groupId
        in: query
        description: Filter results by the Group ID.
        schema:
          type: integer
      - name: index
        in: query
        description: Index of the current page.
        schema:
          type: integer
      - name: pageLength
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginParameterTypePage'
    post:
      tags:
      - PluginParameterTypes
      summary: Creates a PluginParameterType resource
      operationId: post_plugin_parameter_type_endpoint
      parameters:
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PluginParameterType-load'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginParameterType-dump'
      x-codegen-request-body-name: payload
  /api/v1/pluginParameterTypes/drafts/:
    get:
      tags:
      - PluginParameterTypes
      summary: Gets the Drafts for the resource
      operationId: get_resource_drafts_endpoint
      parameters:
      - name: draftType
        in: query
        description: "The type of drafts to return: all, existing, or new."
        schema:
          type: string
      - name: groupId
        in: query
        description: Filter results by the Group ID.
        schema:
          type: integer
      - name: index
        in: query
        description: Index of the current page.
        schema:
          type: integer
      - name: pageLength
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DraftPage'
    post:
      tags:
      - PluginParameterTypes
      summary: Creates a Draft for the resource
      operationId: post_resource_drafts_endpoint
      parameters:
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DraftsPluginParameterType-load'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Draft-dump'
      x-codegen-request-body-name: payload
  /api/v1/pluginParameterTypes/drafts/{draftId}:
    get:
      tags:
      - PluginParameterTypes
      summary: Gets a Draft for the resource
      operationId: get_resources_drafts_id_endpoint
      parameters:
      - name: draftId
        in: path
        description: ID for the Draft of the plugin_task_parameter_type resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Draft-dump'
    put:
      tags:
      - PluginParameterTypes
      summary: Modifies a Draft for the resource
      operationId: put_resources_drafts_id_endpoint
      parameters:
      - name: draftId
        in: path
        description: ID for the Draft of the plugin_task_parameter_type resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DraftsIdPluginParameterTypeMutableFields'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Draft-dump'
      x-codegen-request-body-name: payload
    delete:
      tags:
      - PluginParameterTypes
      summary: Deletes a Draft for the resource
      operationId: delete_resources_drafts_id_endpoint
      parameters:
      - name: draftId
        in: path
        description: ID for the Draft of the plugin_task_parameter_type resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdStatusResponse'
  /api/v1/pluginParameterTypes/{id}:
    get:
      tags:
      - PluginParameterTypes
      summary: Gets a PluginParameterType resource
      operationId: get_plugin_parameter_type_id_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the PluginParameterType resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginParameterType-dump'
    put:
      tags:
      - PluginParameterTypes
      summary: Modifies a PluginParameterType resource
      operationId: put_plugin_parameter_type_id_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the PluginParameterType resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PluginParameterTypeMutableFields'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginParameterType-dump'
      x-codegen-request-body-name: payload
    delete:
      tags:
      - PluginParameterTypes
      summary: Deletes a PluginParameterType resource
      operationId: delete_plugin_parameter_type_id_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the PluginParameterType resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdStatusResponse'
  /api/v1/pluginParameterTypes/{id}/draft:
    get:
      tags:
      - PluginParameterTypes
      summary: Gets the Draft for this resource
      operationId: get_resources_id_draft_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Draft-dump'
    put:
      tags:
      - PluginParameterTypes
      summary: Modifies the Draft for this resource
      operationId: put_resources_id_draft_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DraftPluginParameterTypeMutableFields'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Draft-dump'
      x-codegen-request-body-name: payload
    post:
      tags:
      - PluginParameterTypes
      summary: Creates a Draft for this resource
      operationId: post_resources_id_draft_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DraftPluginParameterTypeMutableFields'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Draft-dump'
      x-codegen-request-body-name: payload
    delete:
      tags:
      - PluginParameterTypes
      summary: Deletes the Draft for this resource
      operationId: delete_resources_id_draft_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdStatusResponse'
  /api/v1/pluginParameterTypes/{id}/snapshots:
    get:
      tags:
      - PluginParameterTypes
      summary: Gets the Snapshots for the resource
      operationId: get_resource_snapshots_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the plugin_task_parameter_type resource.
        required: true
        schema:
          type: integer
      - name: search
        in: query
        description: Search terms for the query (* and ? wildcards).
        schema:
          type: string
      - name: index
        in: query
        description: Index of the current page.
        schema:
          type: integer
      - name: pageLength
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotsPluginParameterTypePage'
  /api/v1/pluginParameterTypes/{id}/snapshots/{snapshotId}:
    get:
      tags:
      - PluginParameterTypes
      summary: Gets a Snapshot for the resource by snapshot id
      operationId: get_resources_snapshots_id_endpoint
      parameters:
      - name: snapshotId
        in: path
        description: Snapshot ID for the plugin_task_parameter_type resource.
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: ID for the plugin_task_parameter_type resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotsIdPluginParameterType-dump'
  /api/v1/pluginParameterTypes/{id}/tags:
    get:
      tags:
      - PluginParameterTypes
      summary: Gets the list of Tags for the resource
      operationId: get_resources_tags_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the plugin_task_parameter_type.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TagRef-dump'
    put:
      tags:
      - PluginParameterTypes
      summary: Replaces one or more Tags to the resource
      operationId: put_resources_tags_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the plugin_task_parameter_type.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdList'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TagRef-dump'
      x-codegen-request-body-name: payload
    post:
      tags:
      - PluginParameterTypes
      summary: Appends one or more Tags to the resource
      operationId: post_resources_tags_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the plugin_task_parameter_type.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdList'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TagRef-dump'
      x-codegen-request-body-name: payload
    delete:
      tags:
      - PluginParameterTypes
      summary: Removes all Tags from the resource
      operationId: delete_resources_tags_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the plugin_task_parameter_type.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdStatusResponse'
  /api/v1/pluginParameterTypes/{id}/tags/{tagId}:
    delete:
      tags:
      - PluginParameterTypes
      summary: Removes a Tag from the resource
      operationId: delete_resources_tags_id_endpoint
      parameters:
      - name: tagId
        in: path
        description: ID for the Tag.
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: ID for the plugin_task_parameter_type.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdStatusResponse'
  /api/v1/plugins/:
    get:
      tags:
      - Plugins
      summary: Gets a list of all Plugin resources
      operationId: get_plugin_endpoint
      parameters:
      - name: search
        in: query
        description: Search terms for the query (* and ? wildcards).
        schema:
          type: string
      - name: groupId
        in: query
        description: Filter results by the Group ID.
        schema:
          type: integer
      - name: index
        in: query
        description: Index of the current page.
        schema:
          type: integer
      - name: pageLength
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginPage'
    post:
      tags:
      - Plugins
      summary: Creates a Plugin resource
      operationId: post_plugin_endpoint
      parameters:
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Plugin-load'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin-dump'
      x-codegen-request-body-name: payload
  /api/v1/plugins/drafts/:
    get:
      tags:
      - Plugins
      summary: Gets the Drafts for the resource
      operationId: get_resource_drafts_endpoint
      parameters:
      - name: draftType
        in: query
        description: "The type of drafts to return: all, existing, or new."
        schema:
          type: string
      - name: groupId
        in: query
        description: Filter results by the Group ID.
        schema:
          type: integer
      - name: index
        in: query
        description: Index of the current page.
        schema:
          type: integer
      - name: pageLength
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DraftPage'
    post:
      tags:
      - Plugins
      summary: Creates a Draft for the resource
      operationId: post_resource_drafts_endpoint
      parameters:
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DraftsPlugin-load'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Draft-dump'
      x-codegen-request-body-name: payload
  /api/v1/plugins/drafts/{draftId}:
    get:
      tags:
      - Plugins
      summary: Gets a Draft for the resource
      operationId: get_resources_drafts_id_endpoint
      parameters:
      - name: draftId
        in: path
        description: ID for the Draft of the plugin resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Draft-dump'
    put:
      tags:
      - Plugins
      summary: Modifies a Draft for the resource
      operationId: put_resources_drafts_id_endpoint
      parameters:
      - name: draftId
        in: path
        description: ID for the Draft of the plugin resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DraftsIdPluginMutableFields'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Draft-dump'
      x-codegen-request-body-name: payload
    delete:
      tags:
      - Plugins
      summary: Deletes a Draft for the resource
      operationId: delete_resources_drafts_id_endpoint
      parameters:
      - name: draftId
        in: path
        description: ID for the Draft of the plugin resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdStatusResponse'
  /api/v1/plugins/{id}:
    get:
      tags:
      - Plugins
      summary: Gets a Plugin resource
      operationId: get_plugin_id_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the Plugin resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin-dump'
    put:
      tags:
      - Plugins
      summary: Modifies a Plugin resource
      operationId: put_plugin_id_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the Plugin resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PluginMutableFields'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin-dump'
      x-codegen-request-body-name: payload
    delete:
      tags:
      - Plugins
      summary: Deletes a Plugin resource
      operationId: delete_plugin_id_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the Plugin resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdStatusResponse'
  /api/v1/plugins/{id}/draft:
    get:
      tags:
      - Plugins
      summary: Gets the Draft for this resource
      operationId: get_resources_id_draft_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Draft-dump'
    put:
      tags:
      - Plugins
      summary: Modifies the Draft for this resource
      operationId: put_resources_id_draft_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DraftPluginMutableFields'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Draft-dump'
      x-codegen-request-body-name: payload
    post:
      tags:
      - Plugins
      summary: Creates a Draft for this resource
      operationId: post_resources_id_draft_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DraftPluginMutableFields'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Draft-dump'
      x-codegen-request-body-name: payload
    delete:
      tags:
      - Plugins
      summary: Deletes the Draft for this resource
      operationId: delete_resources_id_draft_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdStatusResponse'
  /api/v1/plugins/{id}/files:
    get:
      tags:
      - Plugins
      summary: Gets a list of all PluginFile resources for a Plugin resource
      operationId: get_plugin_id_files_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the Plugin resource.
        required: true
        schema:
          type: integer
      - name: search
        in: query
        description: Search terms for the query (* and ? wildcards).
        schema:
          type: string
      - name: index
        in: query
        description: Index of the current page.
        schema:
          type: integer
      - name: pageLength
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginFilePage'
    post:
      tags:
      - Plugins
      summary: Creates a PluginFile resource associated with a Plugin resource
      operationId: post_plugin_id_files_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the Plugin resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PluginFile-load'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginFile-dump'
      x-codegen-request-body-name: payload
    delete:
      tags:
      - Plugins
      summary: Deletes all PluginFile resources associated with a Plugin resource
      operationId: delete_plugin_id_files_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the Plugin resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdStatusResponse'
  /api/v1/plugins/{id}/files/drafts/:
    get:
      tags:
      - Plugins
      summary: Gets the Drafts for the resource
      operationId: get_resource_drafts_endpoint
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      - name: draftType
        in: query
        description: "The type of drafts to return: all, existing, or new."
        schema:
          type: string
      - name: groupId
        in: query
        description: Filter results by the Group ID.
        schema:
          type: integer
      - name: index
        in: query
        description: Index of the current page.
        schema:
          type: integer
      - name: pageLength
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DraftPage'
    post:
      tags:
      - Plugins
      summary: Creates a Draft for the resource
      operationId: post_resource_drafts_endpoint
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NestedDraftsPluginFile-load'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Draft-dump'
      x-codegen-request-body-name: payload
  /api/v1/plugins/{id}/files/drafts/{draftId}:
    get:
      tags:
      - Plugins
      summary: Gets a Draft for the resource
      operationId: get_resources_drafts_id_endpoint
      parameters:
      - name: draftId
        in: path
        description: ID for the Draft of the plugin_file resource.
        required: true
        schema:
          type: integer
      - name: id
        in: path
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Draft-dump'
    put:
      tags:
      - Plugins
      summary: Modifies a Draft for the resource
      operationId: put_resources_drafts_id_endpoint
      parameters:
      - name: draftId
        in: path
        description: ID for the Draft of the plugin_file resource.
        required: true
        schema:
          type: integer
      - name: id
        in: path
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NestedDraftsIdPluginFile-load'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Draft-dump'
      x-codegen-request-body-name: payload
    delete:
      tags:
      - Plugins
      summary: Deletes a Draft for the resource
      operationId: delete_resources_drafts_id_endpoint
      parameters:
      - name: draftId
        in: path
        description: ID for the Draft of the plugin_file resource.
        required: true
        schema:
          type: integer
      - name: id
        in: path
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdStatusResponse'
  /api/v1/plugins/{id}/files/{fileId}:
    get:
      tags:
      - Plugins
      summary: Gets a PluginFile resource
      operationId: get_plugin_id_file_id_endpoint
      parameters:
      - name: fileId
        in: path
        description: ID for the PluginFile resource.
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: ID for the Plugin resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginFile-dump'
    put:
      tags:
      - Plugins
      summary: Modifies a PluginFile resource
      operationId: put_plugin_id_file_id_endpoint
      parameters:
      - name: fileId
        in: path
        description: ID for the PluginFile resource.
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: ID for the Plugin resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PluginFileMutableFields'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginFile-dump'
      x-codegen-request-body-name: payload
    delete:
      tags:
      - Plugins
      summary: Deletes a PluginFile resource
      operationId: delete_plugin_id_file_id_endpoint
      parameters:
      - name: fileId
        in: path
        description: ID for the PluginFile resource.
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: ID for the Plugin resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdStatusResponse'
  /api/v1/plugins/{id}/files/{fileId}/draft:
    get:
      tags:
      - Plugins
      summary: Gets the Draft for this resource
      operationId: get_resources_id_draft_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the resource.
        required: true
        schema:
          type: integer
      - name: fileId
        in: path
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Draft-dump'
    put:
      tags:
      - Plugins
      summary: Modifies the Draft for this resource
      operationId: put_resources_id_draft_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the resource.
        required: true
        schema:
          type: integer
      - name: fileId
        in: path
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NestedDraftPluginFile-load'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Draft-dump'
      x-codegen-request-body-name: payload
    post:
      tags:
      - Plugins
      summary: Creates a Draft for this resource
      operationId: post_resources_id_draft_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the resource.
        required: true
        schema:
          type: integer
      - name: fileId
        in: path
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NestedDraftPluginFile-load'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Draft-dump'
      x-codegen-request-body-name: payload
    delete:
      tags:
      - Plugins
      summary: Deletes the Draft for this resource
      operationId: delete_resources_id_draft_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the resource.
        required: true
        schema:
          type: integer
      - name: fileId
        in: path
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdStatusResponse'
  /api/v1/plugins/{id}/files/{fileId}/snapshots:
    get:
      tags:
      - Plugins
      summary: Gets the Snapshots for the resource
      operationId: get_resource_snapshots_endpoint
      parameters:
      - name: fileId
        in: path
        description: ID for the plugin_file.
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: ID for the plugin_file.
        required: true
        schema:
          type: integer
      - name: search
        in: query
        description: Search terms for the query (* and ? wildcards).
        schema:
          type: string
      - name: index
        in: query
        description: Index of the current page.
        schema:
          type: integer
      - name: pageLength
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NestedSnapshotsPluginFilePage'
  /api/v1/plugins/{id}/files/{fileId}/snapshots/{snapshotId}:
    get:
      tags:
      - Plugins
      summary: Gets a Snapshot for the resource by snapshot id
      operationId: get_resources_snapshots_id_endpoint
      parameters:
      - name: snapshotId
        in: path
        description: ID for the Snapshot.
        required: true
        schema:
          type: integer
      - name: fileId
        in: path
        description: ID for the plugin_file.
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: ID for the plugin_file.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NestedSnapshotsIdPluginFile-dump'
  /api/v1/plugins/{id}/files/{fileId}/tags/:
    get:
      tags:
      - Plugins
      summary: Gets the list of Tags for the resource
      operationId: get_resources_tags_endpoint
      parameters:
      - name: fileId
        in: path
        description: ID for the plugin_file.
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: ID for the plugin.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TagRef-dump'
    put:
      tags:
      - Plugins
      summary: Replaces one or more Tags to the resource
      operationId: put_resources_tags_endpoint
      parameters:
      - name: fileId
        in: path
        description: ID for the plugin_file.
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: ID for the plugin.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdList'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TagRef-dump'
      x-codegen-request-body-name: payload
    post:
      tags:
      - Plugins
      summary: Appends one or more Tags to the resource
      operationId: post_resources_tags_endpoint
      parameters:
      - name: fileId
        in: path
        description: ID for the plugin_file.
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: ID for the plugin.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdList'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TagRef-dump'
      x-codegen-request-body-name: payload
    delete:
      tags:
      - Plugins
      summary: Removes all Tags from the resource
      operationId: delete_resources_tags_endpoint
      parameters:
      - name: fileId
        in: path
        description: ID for the plugin_file.
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: ID for the plugin.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdStatusResponse'
  /api/v1/plugins/{id}/files/{fileId}/tags/{tagId}:
    delete:
      tags:
      - Plugins
      summary: Removes a Tag from the resource
      operationId: delete_resources_tags_id_endpoint
      parameters:
      - name: tagId
        in: path
        description: ID for the Tag.
        required: true
        schema:
          type: integer
      - name: fileId
        in: path
        description: ID for the plugin_file.
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: ID for the plugin.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdStatusResponse'
  /api/v1/plugins/{id}/snapshots:
    get:
      tags:
      - Plugins
      summary: Gets the Snapshots for the resource
      operationId: get_resource_snapshots_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the plugin resource.
        required: true
        schema:
          type: integer
      - name: search
        in: query
        description: Search terms for the query (* and ? wildcards).
        schema:
          type: string
      - name: index
        in: query
        description: Index of the current page.
        schema:
          type: integer
      - name: pageLength
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotsPluginPage'
  /api/v1/plugins/{id}/snapshots/{snapshotId}:
    get:
      tags:
      - Plugins
      summary: Gets a Snapshot for the resource by snapshot id
      operationId: get_resources_snapshots_id_endpoint
      parameters:
      - name: snapshotId
        in: path
        description: Snapshot ID for the plugin resource.
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: ID for the plugin resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotsIdPlugin-dump'
  /api/v1/plugins/{id}/tags:
    get:
      tags:
      - Plugins
      summary: Gets the list of Tags for the resource
      operationId: get_resources_tags_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the plugin.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TagRef-dump'
    put:
      tags:
      - Plugins
      summary: Replaces one or more Tags to the resource
      operationId: put_resources_tags_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the plugin.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdList'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TagRef-dump'
      x-codegen-request-body-name: payload
    post:
      tags:
      - Plugins
      summary: Appends one or more Tags to the resource
      operationId: post_resources_tags_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the plugin.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdList'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TagRef-dump'
      x-codegen-request-body-name: payload
    delete:
      tags:
      - Plugins
      summary: Removes all Tags from the resource
      operationId: delete_resources_tags_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the plugin.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdStatusResponse'
  /api/v1/plugins/{id}/tags/{tagId}:
    delete:
      tags:
      - Plugins
      summary: Removes a Tag from the resource
      operationId: delete_resources_tags_id_endpoint
      parameters:
      - name: tagId
        in: path
        description: ID for the Tag.
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: ID for the plugin.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdStatusResponse'
  /api/v1/queues/:
    get:
      tags:
      - Queues
      summary: Gets a list of all Queue resources
      operationId: get_queue_endpoint
      parameters:
      - name: search
        in: query
        description: Search terms for the query (* and ? wildcards).
        schema:
          type: string
      - name: groupId
        in: query
        description: Filter results by the Group ID.
        schema:
          type: integer
      - name: index
        in: query
        description: Index of the current page.
        schema:
          type: integer
      - name: pageLength
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueuePage'
    post:
      tags:
      - Queues
      summary: Creates a Queue resource
      operationId: post_queue_endpoint
      parameters:
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Queue-load'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Queue-dump'
      x-codegen-request-body-name: payload
  /api/v1/queues/drafts/:
    get:
      tags:
      - Queues
      summary: Gets the Drafts for the resource
      operationId: get_resource_drafts_endpoint
      parameters:
      - name: draftType
        in: query
        description: "The type of drafts to return: all, existing, or new."
        schema:
          type: string
      - name: groupId
        in: query
        description: Filter results by the Group ID.
        schema:
          type: integer
      - name: index
        in: query
        description: Index of the current page.
        schema:
          type: integer
      - name: pageLength
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DraftPage'
    post:
      tags:
      - Queues
      summary: Creates a Draft for the resource
      operationId: post_resource_drafts_endpoint
      parameters:
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DraftsQueue-load'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Draft-dump'
      x-codegen-request-body-name: payload
  /api/v1/queues/drafts/{draftId}:
    get:
      tags:
      - Queues
      summary: Gets a Draft for the resource
      operationId: get_resources_drafts_id_endpoint
      parameters:
      - name: draftId
        in: path
        description: ID for the Draft of the queue resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Draft-dump'
    put:
      tags:
      - Queues
      summary: Modifies a Draft for the resource
      operationId: put_resources_drafts_id_endpoint
      parameters:
      - name: draftId
        in: path
        description: ID for the Draft of the queue resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DraftsIdQueueMutableFields'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Draft-dump'
      x-codegen-request-body-name: payload
    delete:
      tags:
      - Queues
      summary: Deletes a Draft for the resource
      operationId: delete_resources_drafts_id_endpoint
      parameters:
      - name: draftId
        in: path
        description: ID for the Draft of the queue resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdStatusResponse'
  /api/v1/queues/{id}:
    get:
      tags:
      - Queues
      summary: Gets a Queue resource
      operationId: get_queue_id_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the Queue resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Queue-dump'
    put:
      tags:
      - Queues
      summary: Modifies a Queue resource
      operationId: put_queue_id_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the Queue resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueueMutableFields'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Queue-dump'
      x-codegen-request-body-name: payload
    delete:
      tags:
      - Queues
      summary: Deletes a Queue resource
      operationId: delete_queue_id_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the Queue resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdStatusResponse'
  /api/v1/queues/{id}/draft:
    get:
      tags:
      - Queues
      summary: Gets the Draft for this resource
      operationId: get_resources_id_draft_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Draft-dump'
    put:
      tags:
      - Queues
      summary: Modifies the Draft for this resource
      operationId: put_resources_id_draft_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DraftQueueMutableFields'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Draft-dump'
      x-codegen-request-body-name: payload
    post:
      tags:
      - Queues
      summary: Creates a Draft for this resource
      operationId: post_resources_id_draft_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DraftQueueMutableFields'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Draft-dump'
      x-codegen-request-body-name: payload
    delete:
      tags:
      - Queues
      summary: Deletes the Draft for this resource
      operationId: delete_resources_id_draft_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdStatusResponse'
  /api/v1/queues/{id}/snapshots:
    get:
      tags:
      - Queues
      summary: Gets the Snapshots for the resource
      operationId: get_resource_snapshots_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the queue resource.
        required: true
        schema:
          type: integer
      - name: search
        in: query
        description: Search terms for the query (* and ? wildcards).
        schema:
          type: string
      - name: index
        in: query
        description: Index of the current page.
        schema:
          type: integer
      - name: pageLength
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotsQueuePage'
  /api/v1/queues/{id}/snapshots/{snapshotId}:
    get:
      tags:
      - Queues
      summary: Gets a Snapshot for the resource by snapshot id
      operationId: get_resources_snapshots_id_endpoint
      parameters:
      - name: snapshotId
        in: path
        description: Snapshot ID for the queue resource.
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: ID for the queue resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotsIdQueue-dump'
  /api/v1/queues/{id}/tags:
    get:
      tags:
      - Queues
      summary: Gets the list of Tags for the resource
      operationId: get_resources_tags_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the queue.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TagRef-dump'
    put:
      tags:
      - Queues
      summary: Replaces one or more Tags to the resource
      operationId: put_resources_tags_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the queue.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdList'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TagRef-dump'
      x-codegen-request-body-name: payload
    post:
      tags:
      - Queues
      summary: Appends one or more Tags to the resource
      operationId: post_resources_tags_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the queue.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdList'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TagRef-dump'
      x-codegen-request-body-name: payload
    delete:
      tags:
      - Queues
      summary: Removes all Tags from the resource
      operationId: delete_resources_tags_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the queue.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdStatusResponse'
  /api/v1/queues/{id}/tags/{tagId}:
    delete:
      tags:
      - Queues
      summary: Removes a Tag from the resource
      operationId: delete_resources_tags_id_endpoint
      parameters:
      - name: tagId
        in: path
        description: ID for the Tag.
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: ID for the queue.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdStatusResponse'
  /api/v1/tags/:
    get:
      tags:
      - Tags
      summary: Gets a list of all Tags
      operationId: get_tag_endpoint
      parameters:
      - name: search
        in: query
        description: Search terms for the query (* and ? wildcards).
        schema:
          type: string
      - name: groupId
        in: query
        description: Filter results by the Group ID.
        schema:
          type: integer
      - name: index
        in: query
        description: Index of the current page.
        schema:
          type: integer
      - name: pageLength
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagPage'
    post:
      tags:
      - Tags
      summary: Creates a Tag
      operationId: post_tag_endpoint
      parameters:
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag-load'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag-dump'
      x-codegen-request-body-name: payload
  /api/v1/tags/{id}:
    get:
      tags:
      - Tags
      summary: Gets a Tag
      operationId: get_tag_id_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the Tag.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag-dump'
    put:
      tags:
      - Tags
      summary: Modifies a Tag
      operationId: put_tag_id_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the Tag.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagMutableFields'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag-dump'
      x-codegen-request-body-name: payload
    delete:
      tags:
      - Tags
      summary: Deletes a Tag
      operationId: delete_tag_id_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the Tag.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdStatusResponse'
  /api/v1/tags/{id}/resources/:
    get:
      tags:
      - Tags
      summary: Gets all Resources labeled with this Tag
      operationId: get_tag_id_resource_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the Tag.
        required: true
        schema:
          type: integer
      - name: resourceType
        in: query
        description: Filter results by the type of resource.
        schema:
          type: string
      - name: index
        in: query
        description: Index of the current page.
        schema:
          type: integer
      - name: pageLength
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUrlsPage'
  /api/v1/users/:
    get:
      tags:
      - Users
      summary: Gets a list of all Users
      operationId: get_user_endpoint
      parameters:
      - name: search
        in: query
        description: Search terms for the query (* and ? wildcards).
        schema:
          type: string
      - name: index
        in: query
        description: Index of the current page.
        schema:
          type: integer
      - name: pageLength
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPage'
    post:
      tags:
      - Users
      summary: Creates a User
      operationId: post_user_endpoint
      parameters:
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User-load'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCurrent-dump'
      x-codegen-request-body-name: payload
  /api/v1/users/current:
    get:
      tags:
      - Users
      summary: Gets the Current User
      operationId: get_user_current_endpoint
      parameters:
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCurrent-dump'
    put:
      tags:
      - Users
      summary: Modifies the Current User
      operationId: put_user_current_endpoint
      parameters:
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserMutableFields'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCurrent-dump'
      x-codegen-request-body-name: payload
    delete:
      tags:
      - Users
      summary: Deletes a Current User
      operationId: delete_user_current_endpoint
      parameters:
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDelete'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdStatusResponse'
      x-codegen-request-body-name: payload
  /api/v1/users/current/password:
    post:
      tags:
      - Users
      summary: Updates the Current User's password
      operationId: post_user_current_password_endpoint
      parameters:
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPassword-load'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdStatusResponse'
      x-codegen-request-body-name: payload
  /api/v1/users/{id}:
    get:
      tags:
      - Users
      summary: Gets the User with the provided ID
      operationId: get_user_id_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the User resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User-dump'
  /api/v1/users/{id}/password:
    post:
      tags:
      - Users
      summary: Updates the User's password with a given ID
      operationId: post_user_id_password_endpoint
      parameters:
      - name: id
        in: path
        description: ID for the User resource.
        required: true
        schema:
          type: integer
      - name: X-Fields
        in: header
        description: An optional fields mask
        schema:
          type: string
          format: mask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPassword-load'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdStatusResponse'
      x-codegen-request-body-name: payload
  /api/v1/workflows/jobFilesDownload:
    get:
      tags:
      - Workflows
      summary: Download a compressed file archive containing the files needed to execute
        a submitted job
      operationId: get_job_files_download_endpoint
      parameters:
      - name: jobId
        in: query
        description: A job's unique identifier.
        schema:
          type: string
      - name: fileType
        in: query
        description: "The type of file to download: tar_gz or zip."
        schema:
          type: string
      responses:
        "200":
          description: Success
          content: {}
components:
  schemas:
    Login-load:
      required:
      - password
      - username
      type: object
      properties:
        username:
          type: string
          description: The account username.
        password:
          type: string
          description: The account password.
    Login-dump:
      required:
      - username
      type: object
      properties:
        username:
          type: string
          description: The account username.
        status:
          type: string
          description: The status of the login request.
    Logout-dump:
      required:
      - username
      type: object
      properties:
        username:
          type: string
          description: The account username.
        everywhere:
          type: boolean
          description: Logout on all devices.
          default: false
        status:
          type: string
          description: The status of the logout request.
    Artifact-load:
      required:
      - group
      - job
      - uri
      type: object
      properties:
        group:
          type: integer
          description: ID of the Group that will own the Artifact resource.
        description:
          type: string
          description: Description of the Artifact resource.
        job:
          type: integer
          description: id of the job that produced this Artifact
        uri:
          type: string
          description: URL pointing to the location of the Artifact.
    ArtifactPage:
      type: object
      properties:
        index:
          type: integer
          description: Index of the current page.
        isComplete:
          type: boolean
          description: Boolean indicating if more data is available.
        totalNumResults:
          type: integer
          description: Total number of results.
        first:
          type: string
          description: URL to first page in results set.
        next:
          type: string
          description: URL to next page in results set.
        prev:
          type: string
          description: URL to last page in results set.
        data:
          type: array
          items:
            type: object
            description: List of Artifact resources in the current page.
            allOf:
            - $ref: '#/components/schemas/Artifact-dump'
    Artifact-dump:
      required:
      - job
      - uri
      type: object
      properties:
        id:
          type: integer
          description: ID for the Artifact resource.
        snapshot:
          type: integer
          description: ID for the underlying Artifact snapshot.
        group:
          type: object
          description: Group that owns the Artifact resource.
          allOf:
          - $ref: '#/components/schemas/GroupRef'
        user:
          type: object
          description: User that created the Artifact resource.
          allOf:
          - $ref: '#/components/schemas/UserRef-dump'
        createdOn:
          type: string
          description: Timestamp when the Artifact resource was created.
          format: date-time
        lastModifiedOn:
          type: string
          description: Timestamp when the Artifact resource was last modified.
          format: date-time
        latestSnapshot:
          type: boolean
          description: Whether or not the Artifact resource is the latest version.
        hasDraft:
          type: boolean
          description: Whether a draft exists for the Artifact resource.
        tags:
          type: array
          items:
            type: object
            description: Tags associated with the Artifact resource.
            allOf:
            - $ref: '#/components/schemas/TagRef-dump'
        description:
          type: string
          description: Description of the Artifact resource.
        job:
          type: integer
          description: id of the job that produced this Artifact
        uri:
          type: string
          description: URL pointing to the location of the Artifact.
    GroupRef:
      type: object
      properties:
        id:
          type: integer
          description: ID for the Group resource.
        name:
          type: string
          description: Name of the Group resource.
        url:
          type: string
          description: URL for accessing the full Group resource.
    UserRef-dump:
      type: object
      properties:
        id:
          type: integer
          description: ID for the User resource.
        username:
          type: string
          description: Username of the User resource.
        url:
          type: string
          description: URL for accessing the full User resource.
    TagRef-dump:
      type: object
      properties:
        id:
          type: integer
          description: ID for the Tag.
        name:
          type: string
          description: Name of the Tag.
        group:
          type: object
          description: Owner of the Tag.
          allOf:
          - $ref: '#/components/schemas/GroupRef'
        url:
          type: string
          description: URL for accessing the full Tag.
    ArtifactMutableFields:
      type: object
      properties:
        description:
          type: string
          description: Description of the Artifact resource.
    SnapshotsArtifactPage:
      type: object
      properties:
        index:
          type: integer
          description: Index of the current page.
        isComplete:
          type: boolean
          description: Boolean indicating if more data is available.
        totalNumResults:
          type: integer
          description: Total number of results.
        first:
          type: string
          description: URL to first page in results set.
        next:
          type: string
          description: URL to next page in results set.
        prev:
          type: string
          description: URL to last page in results set.
        data:
          type: array
          items:
            type: object
            description: List of Artifact resources in the current page.
            allOf:
            - $ref: '#/components/schemas/Artifact-dump'
    SnapshotsIdArtifact-dump:
      required:
      - job
      - uri
      type: object
      properties:
        id:
          type: integer
          description: ID for the Artifact resource.
        snapshot:
          type: integer
          description: ID for the underlying Artifact snapshot.
        group:
          type: object
          description: Group that owns the Artifact resource.
          allOf:
          - $ref: '#/components/schemas/GroupRef'
        user:
          type: object
          description: User that created the Artifact resource.
          allOf:
          - $ref: '#/components/schemas/UserRef-dump'
        createdOn:
          type: string
          description: Timestamp when the Artifact resource was created.
          format: date-time
        lastModifiedOn:
          type: string
          description: Timestamp when the Artifact resource was last modified.
          format: date-time
        latestSnapshot:
          type: boolean
          description: Whether or not the Artifact resource is the latest version.
        hasDraft:
          type: boolean
          description: Whether a draft exists for the Artifact resource.
        tags:
          type: array
          items:
            type: object
            description: Tags associated with the Artifact resource.
            allOf:
            - $ref: '#/components/schemas/TagRef-dump'
        description:
          type: string
          description: Description of the Artifact resource.
        job:
          type: integer
          description: id of the job that produced this Artifact
        uri:
          type: string
          description: URL pointing to the location of the Artifact.
    Entrypoint-load:
      required:
      - group
      - name
      - taskGraph
      type: object
      properties:
        group:
          type: integer
          description: ID of the Group that will own the Entrypoint resource.
        name:
          type: string
          description: Name of the Entrypoint resource.
        description:
          type: string
          description: Description of the Entrypoint resource.
        taskGraph:
          type: string
          description: Task graph of the Entrypoint resource.
        parameters:
          type: array
          items:
            type: object
            description: List of parameters for the entrypoint.
            allOf:
            - $ref: '#/components/schemas/EntrypointParameter'
        queues:
          type: array
          description: The queue for the entrypoint.
          items:
            type: integer
        plugins:
          type: array
          description: List of plugin files for the entrypoint.
          items:
            type: integer
    EntrypointParameter:
      required:
      - name
      - parameterType
      type: object
      properties:
        name:
          type: string
          description: Name of the Entrypoint parameter resource.
        defaultValue:
          type: string
          description: Default value of the Entrypoint parameter.
        parameterType:
          type: string
          description: Data type of the Entrypoint parameter.
    EntrypointPage:
      type: object
      properties:
        index:
          type: integer
          description: Index of the current page.
        isComplete:
          type: boolean
          description: Boolean indicating if more data is available.
        totalNumResults:
          type: integer
          description: Total number of results.
        first:
          type: string
          description: URL to first page in results set.
        next:
          type: string
          description: URL to next page in results set.
        prev:
          type: string
          description: URL to last page in results set.
        data:
          type: array
          items:
            type: object
            description: List of Entrypoint resources in the current page.
            allOf:
            - $ref: '#/components/schemas/Entrypoint-dump'
    Entrypoint-dump:
      required:
      - name
      - taskGraph
      type: object
      properties:
        id:
          type: integer
          description: ID for the Entrypoint resource.
        snapshot:
          type: integer
          description: ID for the underlying Entrypoint snapshot.
        group:
          type: object
          description: Group that owns the Entrypoint resource.
          allOf:
          - $ref: '#/components/schemas/GroupRef'
        user:
          type: object
          description: User that created the Entrypoint resource.
          allOf:
          - $ref: '#/components/schemas/UserRef-dump'
        createdOn:
          type: string
          description: Timestamp when the Entrypoint resource was created.
          format: date-time
        lastModifiedOn:
          type: string
          description: Timestamp when the Entrypoint resource was last modified.
          format: date-time
        latestSnapshot:
          type: boolean
          description: Whether or not the Entrypoint resource is the latest version.
        hasDraft:
          type: boolean
          description: Whether a draft exists for the Entrypoint resource.
        tags:
          type: array
          items:
            type: object
            description: Tags associated with the Entrypoint resource.
            allOf:
            - $ref: '#/components/schemas/TagRef-dump'
        name:
          type: string
          description: Name of the Entrypoint resource.
        description:
          type: string
          description: Description of the Entrypoint resource.
        taskGraph:
          type: string
          description: Task graph of the Entrypoint resource.
        parameters:
          type: array
          items:
            type: object
            description: List of parameters for the entrypoint.
            allOf:
            - $ref: '#/components/schemas/EntrypointParameter'
        plugins:
          type: array
          items:
            type: object
            description: List of plugins for the entrypoint.
            allOf:
            - $ref: '#/components/schemas/EntrypointPlugin'
        queues:
          type: array
          items:
            type: object
            description: The queue for the entrypoint.
            allOf:
            - $ref: '#/components/schemas/QueueRef'
    EntrypointPlugin:
      type: object
      properties:
        id:
          type: integer
          description: ID for the Plugin resource.
        name:
          type: string
          description: Name of the Plugin resource.
        snapshotId:
          type: integer
          description: Snapshot ID for the Plugin resource.
        url:
          type: string
          description: URL for accessing the full Plugin snapshot.
        files:
          type: array
          items:
            type: object
            description: List of parameters for the entrypoint.
            allOf:
            - $ref: '#/components/schemas/EntrypointPluginFile'
    EntrypointPluginFile:
      type: object
      properties:
        id:
          type: integer
          description: ID for the PluginFile resource.
        filename:
          type: string
          description: Filename of the PluginFile resource.
        snapshotId:
          type: integer
          description: Snapshot ID for the PluginFile resource.
        url:
          type: string
          description: URL for accessing the full PluginFile snapshot.
    QueueRef:
      type: object
      properties:
        id:
          type: integer
          description: ID for the Queue resource.
        group:
          type: object
          description: Group that owns the Queue resource.
          allOf:
          - $ref: '#/components/schemas/GroupRef'
        url:
          type: string
          description: URL for accessing the full Queue resource.
        name:
          type: string
          description: Name of the Queue resource.
    EntrypointMutableFields-load:
      required:
      - name
      - taskGraph
      type: object
      properties:
        name:
          type: string
          description: Name of the Entrypoint resource.
        description:
          type: string
          description: Description of the Entrypoint resource.
        taskGraph:
          type: string
          description: Task graph of the Entrypoint resource.
        parameters:
          type: array
          items:
            type: object
            description: List of parameters for the entrypoint.
            allOf:
            - $ref: '#/components/schemas/EntrypointParameter'
        queues:
          type: array
          description: The queue for the entrypoint.
          items:
            type: integer
    IdStatusResponse:
      type: object
      properties:
        id:
          type: array
          description: A list of integers identifying the affected resource(s).
          items:
            type: integer
        status:
          type: string
          description: The status of the request.
    EntrypointPluginMutableFields-load:
      type: object
      properties:
        plugins:
          type: array
          description: List of plugin files for the entrypoint.
          items:
            type: integer
    IdList:
      type: object
      properties:
        ids:
          type: array
          description: List of identifiers for one or more objects.
          items:
            type: integer
    DraftsEntrypointDraft-load:
      required:
      - group
      - name
      - taskGraph
      type: object
      properties:
        group:
          type: integer
          description: ID of the Group that will own the Entrypoint resource.
        name:
          type: string
          description: Name of the Entrypoint resource.
        description:
          type: string
          description: Description of the Entrypoint resource.
        taskGraph:
          type: string
          description: Task graph of the Entrypoint resource.
        parameters:
          type: array
          items:
            type: object
            description: List of parameters for the entrypoint.
            allOf:
            - $ref: '#/components/schemas/EntrypointParameter'
        queues:
          type: array
          description: The queue for the entrypoint.
          items:
            type: integer
        plugins:
          type: array
          description: List of plugin files for the entrypoint.
          items:
            type: integer
    DraftPage:
      type: object
      properties:
        index:
          type: integer
          description: Index of the current page.
        isComplete:
          type: boolean
          description: Boolean indicating if more data is available.
        totalNumResults:
          type: integer
          description: Total number of results.
        first:
          type: string
          description: URL to first page in results set.
        next:
          type: string
          description: URL to next page in results set.
        prev:
          type: string
          description: URL to last page in results set.
        data:
          type: array
          items:
            type: object
            description: List of Drafts in the current page.
            allOf:
            - $ref: '#/components/schemas/Draft-dump'
    Draft-dump:
      type: object
      properties:
        id:
          type: integer
          description: ID of the Draft.
        group:
          type: object
          description: Group that owns the draft resource.
          allOf:
          - $ref: '#/components/schemas/GroupRef'
        user:
          type: object
          description: User that created the draft resource.
          allOf:
          - $ref: '#/components/schemas/UserRef-dump'
        payload:
          type: object
          properties: {}
          description: The contents of the draft resource.
        createdOn:
          type: string
          description: Timestamp when the draft resource was created.
          format: date-time
        lastModifiedOn:
          type: string
          description: Timestamp when the draft resource was last modified.
          format: date-time
        resourceType:
          type: string
          description: The type of resource of this draft.
        resource:
          type: integer
          description: ID of the resource this draft modifies.
        resourceSnapshot:
          type: integer
          description: ID of the resource snapshot this draft modifies.
        metadata:
          type: object
          properties: {}
          description: Additional metadata about the draft
    DraftsIdEntrypointDraft-load:
      required:
      - name
      - taskGraph
      type: object
      properties:
        name:
          type: string
          description: Name of the Entrypoint resource.
        description:
          type: string
          description: Description of the Entrypoint resource.
        taskGraph:
          type: string
          description: Task graph of the Entrypoint resource.
        parameters:
          type: array
          items:
            type: object
            description: List of parameters for the entrypoint.
            allOf:
            - $ref: '#/components/schemas/EntrypointParameter'
        queues:
          type: array
          description: The queue for the entrypoint.
          items:
            type: integer
        plugins:
          type: array
          description: List of plugin files for the entrypoint.
          items:
            type: integer
    DraftEntrypointDraft-load:
      required:
      - name
      - taskGraph
      type: object
      properties:
        name:
          type: string
          description: Name of the Entrypoint resource.
        description:
          type: string
          description: Description of the Entrypoint resource.
        taskGraph:
          type: string
          description: Task graph of the Entrypoint resource.
        parameters:
          type: array
          items:
            type: object
            description: List of parameters for the entrypoint.
            allOf:
            - $ref: '#/components/schemas/EntrypointParameter'
        queues:
          type: array
          description: The queue for the entrypoint.
          items:
            type: integer
        plugins:
          type: array
          description: List of plugin files for the entrypoint.
          items:
            type: integer
    SnapshotsEntrypointPage:
      type: object
      properties:
        index:
          type: integer
          description: Index of the current page.
        isComplete:
          type: boolean
          description: Boolean indicating if more data is available.
        totalNumResults:
          type: integer
          description: Total number of results.
        first:
          type: string
          description: URL to first page in results set.
        next:
          type: string
          description: URL to next page in results set.
        prev:
          type: string
          description: URL to last page in results set.
        data:
          type: array
          items:
            type: object
            description: List of Entrypoint resources in the current page.
            allOf:
            - $ref: '#/components/schemas/Entrypoint-dump'
    SnapshotsIdEntrypoint-dump:
      required:
      - name
      - taskGraph
      type: object
      properties:
        id:
          type: integer
          description: ID for the Entrypoint resource.
        snapshot:
          type: integer
          description: ID for the underlying Entrypoint snapshot.
        group:
          type: object
          description: Group that owns the Entrypoint resource.
          allOf:
          - $ref: '#/components/schemas/GroupRef'
        user:
          type: object
          description: User that created the Entrypoint resource.
          allOf:
          - $ref: '#/components/schemas/UserRef-dump'
        createdOn:
          type: string
          description: Timestamp when the Entrypoint resource was created.
          format: date-time
        lastModifiedOn:
          type: string
          description: Timestamp when the Entrypoint resource was last modified.
          format: date-time
        latestSnapshot:
          type: boolean
          description: Whether or not the Entrypoint resource is the latest version.
        hasDraft:
          type: boolean
          description: Whether a draft exists for the Entrypoint resource.
        tags:
          type: array
          items:
            type: object
            description: Tags associated with the Entrypoint resource.
            allOf:
            - $ref: '#/components/schemas/TagRef-dump'
        name:
          type: string
          description: Name of the Entrypoint resource.
        description:
          type: string
          description: Description of the Entrypoint resource.
        taskGraph:
          type: string
          description: Task graph of the Entrypoint resource.
        parameters:
          type: array
          items:
            type: object
            description: List of parameters for the entrypoint.
            allOf:
            - $ref: '#/components/schemas/EntrypointParameter'
        plugins:
          type: array
          items:
            type: object
            description: List of plugins for the entrypoint.
            allOf:
            - $ref: '#/components/schemas/EntrypointPlugin'
        queues:
          type: array
          items:
            type: object
            description: The queue for the entrypoint.
            allOf:
            - $ref: '#/components/schemas/QueueRef'
    Experiment-load:
      required:
      - group
      - name
      type: object
      properties:
        group:
          type: integer
          description: ID of the Group that will own the Experiment resource.
        name:
          type: string
          description: Name of the Experiment resource.
        description:
          type: string
          description: Description of the Experiment resource.
        entrypoints:
          type: array
          description: A list of Entrypoint IDs.
          items:
            type: integer
    ExperimentPage:
      type: object
      properties:
        index:
          type: integer
          description: Index of the current page.
        isComplete:
          type: boolean
          description: Boolean indicating if more data is available.
        totalNumResults:
          type: integer
          description: Total number of results.
        first:
          type: string
          description: URL to first page in results set.
        next:
          type: string
          description: URL to next page in results set.
        prev:
          type: string
          description: URL to last page in results set.
        data:
          type: array
          items:
            type: object
            description: List of Experiment resources in the current page.
            allOf:
            - $ref: '#/components/schemas/Experiment-dump'
    Experiment-dump:
      required:
      - name
      type: object
      properties:
        id:
          type: integer
          description: ID for the Experiment resource.
        snapshot:
          type: integer
          description: ID for the underlying Experiment snapshot.
        group:
          type: object
          description: Group that owns the Experiment resource.
          allOf:
          - $ref: '#/components/schemas/GroupRef'
        user:
          type: object
          description: User that created the Experiment resource.
          allOf:
          - $ref: '#/components/schemas/UserRef-dump'
        createdOn:
          type: string
          description: Timestamp when the Experiment resource was created.
          format: date-time
        lastModifiedOn:
          type: string
          description: Timestamp when the Experiment resource was last modified.
          format: date-time
        latestSnapshot:
          type: boolean
          description: Whether or not the Experiment resource is the latest version.
        hasDraft:
          type: boolean
          description: Whether a draft exists for the Experiment resource.
        tags:
          type: array
          items:
            type: object
            description: Tags associated with the Experiment resource.
            allOf:
            - $ref: '#/components/schemas/TagRef-dump'
        name:
          type: string
          description: Name of the Experiment resource.
        description:
          type: string
          description: Description of the Experiment resource.
        entrypoints:
          type: array
          items:
            type: object
            description: List of associated Entrypoint resources.
            allOf:
            - $ref: '#/components/schemas/EntrypointRef'
    EntrypointRef:
      type: object
      properties:
        id:
          type: integer
          description: ID for the Entrypoint resource.
        group:
          type: object
          description: Group that owns the Entrypoint resource.
          allOf:
          - $ref: '#/components/schemas/GroupRef'
        url:
          type: string
          description: URL for accessing the full Entrypoint resource.
        name:
          type: string
          description: Name of the Entrypoint resource.
    ExperimentMutableFields-load:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: Name of the Experiment resource.
        description:
          type: string
          description: Description of the Experiment resource.
        entrypoints:
          type: array
          description: A list of Entrypoint IDs.
          items:
            type: integer
    Job-load:
      required:
      - entrypoint
      - queue
      type: object
      properties:
        description:
          type: string
          description: Description of the Job resource.
        queue:
          type: integer
          description: An integer identifying a registered queue.
        entrypoint:
          type: integer
          description: An integer identifying a registered entry point.
        values:
          type: object
          properties: {}
          description: A dictionary of keyword arguments to pass to the Job's Entrypoint.
        timeout:
          type: string
          description: "The maximum alloted time for a job before it times out and\
            \ is stopped. If omitted, the job timeout will default to 24 hours."
          default: 24h
    JobPage:
      type: object
      properties:
        index:
          type: integer
          description: Index of the current page.
        isComplete:
          type: boolean
          description: Boolean indicating if more data is available.
        totalNumResults:
          type: integer
          description: Total number of results.
        first:
          type: string
          description: URL to first page in results set.
        next:
          type: string
          description: URL to next page in results set.
        prev:
          type: string
          description: URL to last page in results set.
        data:
          type: array
          items:
            type: object
            description: List of Job resources in the current page.
            allOf:
            - $ref: '#/components/schemas/Job-dump'
    Job-dump:
      type: object
      properties:
        id:
          type: integer
          description: ID for the Job resource.
        snapshot:
          type: integer
          description: ID for the underlying Job snapshot.
        group:
          type: object
          description: Group that owns the Job resource.
          allOf:
          - $ref: '#/components/schemas/GroupRef'
        user:
          type: object
          description: User that created the Job resource.
          allOf:
          - $ref: '#/components/schemas/UserRef-dump'
        createdOn:
          type: string
          description: Timestamp when the Job resource was created.
          format: date-time
        lastModifiedOn:
          type: string
          description: Timestamp when the Job resource was last modified.
          format: date-time
        latestSnapshot:
          type: boolean
          description: Whether or not the Job resource is the latest version.
        hasDraft:
          type: boolean
          description: Whether a draft exists for the Job resource.
        tags:
          type: array
          items:
            type: object
            description: Tags associated with the Job resource.
            allOf:
            - $ref: '#/components/schemas/TagRef-dump'
        description:
          type: string
          description: Description of the Job resource.
        queue:
          type: object
          description: The active queue used to run the Job.
          allOf:
          - $ref: '#/components/schemas/QueueSnapshotRef'
        experiment:
          type: object
          description: The registered experiment associated with the Job.
          allOf:
          - $ref: '#/components/schemas/ExperimentSnapshotRef'
        entrypoint:
          type: object
          description: The entry point associated with the Job.
          allOf:
          - $ref: '#/components/schemas/EntrypointSnapshotRef'
        values:
          type: object
          properties: {}
          description: A dictionary of keyword arguments to pass to the Job's Entrypoint.
        timeout:
          type: string
          description: "The maximum alloted time for a job before it times out and\
            \ is stopped. If omitted, the job timeout will default to 24 hours."
          default: 24h
        status:
          type: string
          description: "The current status of the job. The allowed values are: queued,\
            \ started, deferred, finished, failed."
        artifacts:
          type: array
          items:
            type: object
            description: Artifacts created by the Job resource.
            allOf:
            - $ref: '#/components/schemas/ArtifactRef'
    QueueSnapshotRef:
      type: object
      properties:
        snapshotId:
          type: integer
          description: Snapshot ID for the Queue resource.
        group:
          type: object
          description: Group that owns the Queue resource.
          allOf:
          - $ref: '#/components/schemas/GroupRef'
        url:
          type: string
          description: URL for accessing the full Queue resource.
        name:
          type: string
          description: Name of the Queue resource.
    ExperimentSnapshotRef:
      type: object
      properties:
        snapshotId:
          type: integer
          description: Snapshot ID for the Experiment resource.
        group:
          type: object
          description: Group that owns the Experiment resource.
          allOf:
          - $ref: '#/components/schemas/GroupRef'
        url:
          type: string
          description: URL for accessing the full Experiment resource.
        name:
          type: string
          description: Name of the Experiment resource.
    EntrypointSnapshotRef:
      type: object
      properties:
        snapshotId:
          type: integer
          description: Snapshot ID for the Entrypoint resource.
        group:
          type: object
          description: Group that owns the Entrypoint resource.
          allOf:
          - $ref: '#/components/schemas/GroupRef'
        url:
          type: string
          description: URL for accessing the full Entrypoint resource.
        name:
          type: string
          description: Name of the Entrypoint resource.
    ArtifactRef:
      type: object
      properties:
        id:
          type: integer
          description: ID for the Artifact resource.
        group:
          type: object
          description: Group that owns the Artifact resource.
          allOf:
          - $ref: '#/components/schemas/GroupRef'
        url:
          type: string
          description: URL for accessing the full Artifact resource.
        artifactUri:
          type: string
          description: URL pointing to the location of the Artifact resource.
    JobStatus-load:
      type: object
      properties:
        status:
          type: string
          description: "The current status of the job. The allowed values are: queued,\
            \ started, deferred, finished, failed."
    JobStatus-dump:
      type: object
      properties:
        id:
          type: integer
          description: ID for the Job resource.
        status:
          type: string
          description: "The current status of the job. The allowed values are: queued,\
            \ started, deferred, finished, failed."
    JobMlflowRun:
      type: object
      properties:
        mlflowRunId:
          type: string
          description: UUID for the associated Mlflow Run.
    JobArtifactSchema-load:
      required:
      - uri
      type: object
      properties:
        description:
          type: string
          description: Description of the Artifact resource.
        uri:
          type: string
          description: URL pointing to the location of the Artifact.
    DraftsExperimentDraft-load:
      required:
      - group
      - name
      type: object
      properties:
        group:
          type: integer
          description: ID of the Group that will own the Experiment resource.
        name:
          type: string
          description: Name of the Experiment resource.
        description:
          type: string
          description: Description of the Experiment resource.
        entrypoints:
          type: array
          description: A list of Entrypoint IDs.
          items:
            type: integer
    DraftsIdExperimentDraft-load:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: Name of the Experiment resource.
        description:
          type: string
          description: Description of the Experiment resource.
        entrypoints:
          type: array
          description: A list of Entrypoint IDs.
          items:
            type: integer
    DraftExperimentDraft-load:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: Name of the Experiment resource.
        description:
          type: string
          description: Description of the Experiment resource.
        entrypoints:
          type: array
          description: A list of Entrypoint IDs.
          items:
            type: integer
    SnapshotsExperimentPage:
      type: object
      properties:
        index:
          type: integer
          description: Index of the current page.
        isComplete:
          type: boolean
          description: Boolean indicating if more data is available.
        totalNumResults:
          type: integer
          description: Total number of results.
        first:
          type: string
          description: URL to first page in results set.
        next:
          type: string
          description: URL to next page in results set.
        prev:
          type: string
          description: URL to last page in results set.
        data:
          type: array
          items:
            type: object
            description: List of Experiment resources in the current page.
            allOf:
            - $ref: '#/components/schemas/Experiment-dump'
    SnapshotsIdExperiment-dump:
      required:
      - name
      type: object
      properties:
        id:
          type: integer
          description: ID for the Experiment resource.
        snapshot:
          type: integer
          description: ID for the underlying Experiment snapshot.
        group:
          type: object
          description: Group that owns the Experiment resource.
          allOf:
          - $ref: '#/components/schemas/GroupRef'
        user:
          type: object
          description: User that created the Experiment resource.
          allOf:
          - $ref: '#/components/schemas/UserRef-dump'
        createdOn:
          type: string
          description: Timestamp when the Experiment resource was created.
          format: date-time
        lastModifiedOn:
          type: string
          description: Timestamp when the Experiment resource was last modified.
          format: date-time
        latestSnapshot:
          type: boolean
          description: Whether or not the Experiment resource is the latest version.
        hasDraft:
          type: boolean
          description: Whether a draft exists for the Experiment resource.
        tags:
          type: array
          items:
            type: object
            description: Tags associated with the Experiment resource.
            allOf:
            - $ref: '#/components/schemas/TagRef-dump'
        name:
          type: string
          description: Name of the Experiment resource.
        description:
          type: string
          description: Description of the Experiment resource.
        entrypoints:
          type: array
          items:
            type: object
            description: List of associated Entrypoint resources.
            allOf:
            - $ref: '#/components/schemas/EntrypointRef'
    GroupPage:
      type: object
      properties:
        index:
          type: integer
          description: Index of the current page.
        isComplete:
          type: boolean
          description: Boolean indicating if more data is available.
        totalNumResults:
          type: integer
          description: Total number of results.
        first:
          type: string
          description: URL to first page in results set.
        next:
          type: string
          description: URL to next page in results set.
        prev:
          type: string
          description: URL to last page in results set.
        data:
          type: array
          items:
            type: object
            description: List of Group resources in the current page.
            allOf:
            - $ref: '#/components/schemas/Group-dump'
    Group-dump:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: Name of the Group.
        id:
          type: integer
          description: ID for the Group resource.
        user:
          type: object
          description: User that created the Group resource.
          allOf:
          - $ref: '#/components/schemas/UserRef-dump'
        members:
          type: array
          items:
            type: object
            description: A list of GroupMembers in a Group.
            allOf:
            - $ref: '#/components/schemas/GroupMember-dump'
        createdOn:
          type: string
          description: Timestamp when the Group resource was created.
          format: date-time
        lastModifiedOn:
          type: string
          description: Timestamp when the Group resource was last modified.
          format: date-time
    GroupMember-dump:
      type: object
      properties:
        user:
          type: object
          description: User that is a member of the Group.
          allOf:
          - $ref: '#/components/schemas/UserRef-dump'
        group:
          type: object
          description: The Group of which the User is a member.
          allOf:
          - $ref: '#/components/schemas/GroupRef'
        permissions:
          type: object
          description: The Group Permissions for this User.
          allOf:
          - $ref: '#/components/schemas/Generated-dump'
    Generated-dump:
      type: object
      properties:
        read:
          type: boolean
          description: Permission for member to read Group.
        write:
          type: boolean
          description: Permission for member to modify Group.
        shareRead:
          type: boolean
          description: Permission for member to share read-only Group.
        shareWrite:
          type: boolean
          description: Permission for member to share read+write Group.
        owner:
          type: boolean
          description: Flag for if the member is a Group owner.
        admin:
          type: boolean
          description: Flag for if the member is a Group admin.
    SnapshotsJobPage:
      type: object
      properties:
        index:
          type: integer
          description: Index of the current page.
        isComplete:
          type: boolean
          description: Boolean indicating if more data is available.
        totalNumResults:
          type: integer
          description: Total number of results.
        first:
          type: string
          description: URL to first page in results set.
        next:
          type: string
          description: URL to next page in results set.
        prev:
          type: string
          description: URL to last page in results set.
        data:
          type: array
          items:
            type: object
            description: List of Job resources in the current page.
            allOf:
            - $ref: '#/components/schemas/Job-dump'
    SnapshotsIdJob-dump:
      type: object
      properties:
        id:
          type: integer
          description: ID for the Job resource.
        snapshot:
          type: integer
          description: ID for the underlying Job snapshot.
        group:
          type: object
          description: Group that owns the Job resource.
          allOf:
          - $ref: '#/components/schemas/GroupRef'
        user:
          type: object
          description: User that created the Job resource.
          allOf:
          - $ref: '#/components/schemas/UserRef-dump'
        createdOn:
          type: string
          description: Timestamp when the Job resource was created.
          format: date-time
        lastModifiedOn:
          type: string
          description: Timestamp when the Job resource was last modified.
          format: date-time
        latestSnapshot:
          type: boolean
          description: Whether or not the Job resource is the latest version.
        hasDraft:
          type: boolean
          description: Whether a draft exists for the Job resource.
        tags:
          type: array
          items:
            type: object
            description: Tags associated with the Job resource.
            allOf:
            - $ref: '#/components/schemas/TagRef-dump'
        description:
          type: string
          description: Description of the Job resource.
        queue:
          type: object
          description: The active queue used to run the Job.
          allOf:
          - $ref: '#/components/schemas/QueueSnapshotRef'
        experiment:
          type: object
          description: The registered experiment associated with the Job.
          allOf:
          - $ref: '#/components/schemas/ExperimentSnapshotRef'
        entrypoint:
          type: object
          description: The entry point associated with the Job.
          allOf:
          - $ref: '#/components/schemas/EntrypointSnapshotRef'
        values:
          type: object
          properties: {}
          description: A dictionary of keyword arguments to pass to the Job's Entrypoint.
        timeout:
          type: string
          description: "The maximum alloted time for a job before it times out and\
            \ is stopped. If omitted, the job timeout will default to 24 hours."
          default: 24h
        status:
          type: string
          description: "The current status of the job. The allowed values are: queued,\
            \ started, deferred, finished, failed."
        artifacts:
          type: array
          items:
            type: object
            description: Artifacts created by the Job resource.
            allOf:
            - $ref: '#/components/schemas/ArtifactRef'
    Model-load:
      required:
      - group
      - name
      type: object
      properties:
        group:
          type: integer
          description: ID of the Group that will own the Model resource.
        name:
          type: string
          description: Name of the Model resource.
        description:
          type: string
          description: Description of the Model resource.
    ModelPage:
      type: object
      properties:
        index:
          type: integer
          description: Index of the current page.
        isComplete:
          type: boolean
          description: Boolean indicating if more data is available.
        totalNumResults:
          type: integer
          description: Total number of results.
        first:
          type: string
          description: URL to first page in results set.
        next:
          type: string
          description: URL to next page in results set.
        prev:
          type: string
          description: URL to last page in results set.
        data:
          type: array
          items:
            type: object
            description: List of Model resources in the current page.
            allOf:
            - $ref: '#/components/schemas/Model-dump'
    Model-dump:
      required:
      - name
      type: object
      properties:
        id:
          type: integer
          description: ID for the Model resource.
        snapshot:
          type: integer
          description: ID for the underlying Model snapshot.
        group:
          type: object
          description: Group that owns the Model resource.
          allOf:
          - $ref: '#/components/schemas/GroupRef'
        user:
          type: object
          description: User that created the Model resource.
          allOf:
          - $ref: '#/components/schemas/UserRef-dump'
        createdOn:
          type: string
          description: Timestamp when the Model resource was created.
          format: date-time
        lastModifiedOn:
          type: string
          description: Timestamp when the Model resource was last modified.
          format: date-time
        latestSnapshot:
          type: boolean
          description: Whether or not the Model resource is the latest version.
        hasDraft:
          type: boolean
          description: Whether a draft exists for the Model resource.
        tags:
          type: array
          items:
            type: object
            description: Tags associated with the Model resource.
            allOf:
            - $ref: '#/components/schemas/TagRef-dump'
        name:
          type: string
          description: Name of the Model resource.
        description:
          type: string
          description: Description of the Model resource.
        versions:
          type: array
          items:
            type: object
            description: The details of this model version.
            allOf:
            - $ref: '#/components/schemas/ModelVersionRef-dump'
        latestVersion:
          type: object
          description: The details of latest version of this model.
          allOf:
          - $ref: '#/components/schemas/ModelVersion-dump'
    ModelVersionRef-dump:
      type: object
      properties:
        versionNumber:
          type: integer
          description: The version number of the Model.
        url:
          type: string
          description: URL for accessing the full Model Version.
    ModelVersion-dump:
      type: object
      properties:
        description:
          type: string
          description: Description of the Model Version.
        model:
          type: object
          description: The Model resource.
          allOf:
          - $ref: '#/components/schemas/ModelRef'
        artifact:
          type: object
          description: The artifact representing the Model Version.
          allOf:
          - $ref: '#/components/schemas/ArtifactRef'
        versionNumber:
          type: integer
          description: The version number of the Model.
        createdOn:
          type: string
          description: Timestamp when the Model Version was created.
          format: date-time
    ModelRef:
      required:
      - name
      type: object
      properties:
        id:
          type: integer
          description: ID for the Model resource.
        group:
          type: object
          description: Group that owns the Model resource.
          allOf:
          - $ref: '#/components/schemas/GroupRef'
        url:
          type: string
          description: URL for accessing the full Model resource.
        name:
          type: string
          description: Name of the Model resource.
    ModelMutableFields:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: Name of the Model resource.
        description:
          type: string
          description: Description of the Model resource.
    ModelVersion-load:
      required:
      - artifact
      type: object
      properties:
        description:
          type: string
          description: Description of the Model Version.
        artifact:
          type: integer
          description: The artifact representing the Model Version.
    ModelVersionPage:
      type: object
      properties:
        index:
          type: integer
          description: Index of the current page.
        isComplete:
          type: boolean
          description: Boolean indicating if more data is available.
        totalNumResults:
          type: integer
          description: Total number of results.
        first:
          type: string
          description: URL to first page in results set.
        next:
          type: string
          description: URL to next page in results set.
        prev:
          type: string
          description: URL to last page in results set.
        data:
          type: array
          items:
            type: object
            description: List of Model resources in the current page.
            allOf:
            - $ref: '#/components/schemas/ModelVersion-dump'
    ModelVersionMutableFields:
      type: object
      properties:
        description:
          type: string
          description: Description of the Model Version.
    DraftsModel-load:
      required:
      - group
      - name
      type: object
      properties:
        group:
          type: integer
          description: ID of the Group that will own the Model resource.
        name:
          type: string
          description: Name of the Model resource.
        description:
          type: string
          description: Description of the Model resource.
    DraftsIdModel-load:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: Name of the Model resource.
        description:
          type: string
          description: Description of the Model resource.
    DraftModel-load:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: Name of the Model resource.
        description:
          type: string
          description: Description of the Model resource.
    SnapshotsModelPage:
      type: object
      properties:
        index:
          type: integer
          description: Index of the current page.
        isComplete:
          type: boolean
          description: Boolean indicating if more data is available.
        totalNumResults:
          type: integer
          description: Total number of results.
        first:
          type: string
          description: URL to first page in results set.
        next:
          type: string
          description: URL to next page in results set.
        prev:
          type: string
          description: URL to last page in results set.
        data:
          type: array
          items:
            type: object
            description: List of Model resources in the current page.
            allOf:
            - $ref: '#/components/schemas/Model-dump'
    SnapshotsIdModel-dump:
      required:
      - name
      type: object
      properties:
        id:
          type: integer
          description: ID for the Model resource.
        snapshot:
          type: integer
          description: ID for the underlying Model snapshot.
        group:
          type: object
          description: Group that owns the Model resource.
          allOf:
          - $ref: '#/components/schemas/GroupRef'
        user:
          type: object
          description: User that created the Model resource.
          allOf:
          - $ref: '#/components/schemas/UserRef-dump'
        createdOn:
          type: string
          description: Timestamp when the Model resource was created.
          format: date-time
        lastModifiedOn:
          type: string
          description: Timestamp when the Model resource was last modified.
          format: date-time
        latestSnapshot:
          type: boolean
          description: Whether or not the Model resource is the latest version.
        hasDraft:
          type: boolean
          description: Whether a draft exists for the Model resource.
        tags:
          type: array
          items:
            type: object
            description: Tags associated with the Model resource.
            allOf:
            - $ref: '#/components/schemas/TagRef-dump'
        name:
          type: string
          description: Name of the Model resource.
        description:
          type: string
          description: Description of the Model resource.
        versions:
          type: array
          items:
            type: object
            description: The details of this model version.
            allOf:
            - $ref: '#/components/schemas/ModelVersionRef-dump'
        latestVersion:
          type: object
          description: The details of latest version of this model.
          allOf:
          - $ref: '#/components/schemas/ModelVersion-dump'
    PluginParameterType-load:
      required:
      - group
      - name
      type: object
      properties:
        group:
          type: integer
          description: ID of the Group that will own the PluginParameterType resource.
        name:
          type: string
          description: Name of the PluginParameterType resource.
        description:
          type: string
          description: Description of the PluginParameterType resource.
        structure:
          type: object
          properties: {}
          description: Structure of the PluginParameterType resource.
    PluginParameterTypePage:
      type: object
      properties:
        index:
          type: integer
          description: Index of the current page.
        isComplete:
          type: boolean
          description: Boolean indicating if more data is available.
        totalNumResults:
          type: integer
          description: Total number of results.
        first:
          type: string
          description: URL to first page in results set.
        next:
          type: string
          description: URL to next page in results set.
        prev:
          type: string
          description: URL to last page in results set.
        data:
          type: array
          items:
            type: object
            description: List of PluginParameterType resources in the current page.
            allOf:
            - $ref: '#/components/schemas/PluginParameterType-dump'
    PluginParameterType-dump:
      required:
      - name
      type: object
      properties:
        id:
          type: integer
          description: ID for the PluginParameterType resource.
        snapshot:
          type: integer
          description: ID for the underlying PluginParameterType snapshot.
        group:
          type: object
          description: Group that owns the PluginParameterType resource.
          allOf:
          - $ref: '#/components/schemas/GroupRef'
        user:
          type: object
          description: User that created the PluginParameterType resource.
          allOf:
          - $ref: '#/components/schemas/UserRef-dump'
        createdOn:
          type: string
          description: Timestamp when the PluginParameterType resource was created.
          format: date-time
        lastModifiedOn:
          type: string
          description: Timestamp when the PluginParameterType resource was last modified.
          format: date-time
        latestSnapshot:
          type: boolean
          description: Whether or not the PluginParameterType resource is the latest
            version.
        hasDraft:
          type: boolean
          description: Whether a draft exists for the PluginParameterType resource.
        tags:
          type: array
          items:
            type: object
            description: Tags associated with the PluginParameterType resource.
            allOf:
            - $ref: '#/components/schemas/TagRef-dump'
        name:
          type: string
          description: Name of the PluginParameterType resource.
        description:
          type: string
          description: Description of the PluginParameterType resource.
        structure:
          type: object
          properties: {}
          description: Structure of the PluginParameterType resource.
    PluginParameterTypeMutableFields:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: Name of the PluginParameterType resource.
        description:
          type: string
          description: Description of the PluginParameterType resource.
        structure:
          type: object
          properties: {}
          description: Structure of the PluginParameterType resource.
    DraftsPluginParameterType-load:
      required:
      - group
      - name
      type: object
      properties:
        group:
          type: integer
          description: ID of the Group that will own the PluginParameterType resource.
        name:
          type: string
          description: Name of the PluginParameterType resource.
        description:
          type: string
          description: Description of the PluginParameterType resource.
        structure:
          type: object
          properties: {}
          description: Structure of the PluginParameterType resource.
    DraftsIdPluginParameterTypeMutableFields:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: Name of the PluginParameterType resource.
        description:
          type: string
          description: Description of the PluginParameterType resource.
        structure:
          type: object
          properties: {}
          description: Structure of the PluginParameterType resource.
    DraftPluginParameterTypeMutableFields:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: Name of the PluginParameterType resource.
        description:
          type: string
          description: Description of the PluginParameterType resource.
        structure:
          type: object
          properties: {}
          description: Structure of the PluginParameterType resource.
    SnapshotsPluginParameterTypePage:
      type: object
      properties:
        index:
          type: integer
          description: Index of the current page.
        isComplete:
          type: boolean
          description: Boolean indicating if more data is available.
        totalNumResults:
          type: integer
          description: Total number of results.
        first:
          type: string
          description: URL to first page in results set.
        next:
          type: string
          description: URL to next page in results set.
        prev:
          type: string
          description: URL to last page in results set.
        data:
          type: array
          items:
            type: object
            description: List of PluginParameterType resources in the current page.
            allOf:
            - $ref: '#/components/schemas/PluginParameterType-dump'
    SnapshotsIdPluginParameterType-dump:
      required:
      - name
      type: object
      properties:
        id:
          type: integer
          description: ID for the PluginParameterType resource.
        snapshot:
          type: integer
          description: ID for the underlying PluginParameterType snapshot.
        group:
          type: object
          description: Group that owns the PluginParameterType resource.
          allOf:
          - $ref: '#/components/schemas/GroupRef'
        user:
          type: object
          description: User that created the PluginParameterType resource.
          allOf:
          - $ref: '#/components/schemas/UserRef-dump'
        createdOn:
          type: string
          description: Timestamp when the PluginParameterType resource was created.
          format: date-time
        lastModifiedOn:
          type: string
          description: Timestamp when the PluginParameterType resource was last modified.
          format: date-time
        latestSnapshot:
          type: boolean
          description: Whether or not the PluginParameterType resource is the latest
            version.
        hasDraft:
          type: boolean
          description: Whether a draft exists for the PluginParameterType resource.
        tags:
          type: array
          items:
            type: object
            description: Tags associated with the PluginParameterType resource.
            allOf:
            - $ref: '#/components/schemas/TagRef-dump'
        name:
          type: string
          description: Name of the PluginParameterType resource.
        description:
          type: string
          description: Description of the PluginParameterType resource.
        structure:
          type: object
          properties: {}
          description: Structure of the PluginParameterType resource.
    NestedSnapshotsPluginFilePage:
      type: object
      properties:
        index:
          type: integer
          description: Index of the current page.
        isComplete:
          type: boolean
          description: Boolean indicating if more data is available.
        totalNumResults:
          type: integer
          description: Total number of results.
        first:
          type: string
          description: URL to first page in results set.
        next:
          type: string
          description: URL to next page in results set.
        prev:
          type: string
          description: URL to last page in results set.
        data:
          type: array
          items:
            type: object
            description: List of PluginFile resources in the current page.
            allOf:
            - $ref: '#/components/schemas/PluginFile-dump'
    PluginFile-dump:
      required:
      - contents
      - filename
      type: object
      properties:
        id:
          type: integer
          description: ID for the PluginFile resource.
        snapshot:
          type: integer
          description: ID for the underlying PluginFile snapshot.
        group:
          type: object
          description: Group that owns the PluginFile resource.
          allOf:
          - $ref: '#/components/schemas/GroupRef'
        user:
          type: object
          description: User that created the PluginFile resource.
          allOf:
          - $ref: '#/components/schemas/UserRef-dump'
        createdOn:
          type: string
          description: Timestamp when the PluginFile resource was created.
          format: date-time
        lastModifiedOn:
          type: string
          description: Timestamp when the PluginFile resource was last modified.
          format: date-time
        latestSnapshot:
          type: boolean
          description: Whether or not the PluginFile resource is the latest version.
        hasDraft:
          type: boolean
          description: Whether a draft exists for the PluginFile resource.
        tags:
          type: array
          items:
            type: object
            description: Tags associated with the PluginFile resource.
            allOf:
            - $ref: '#/components/schemas/TagRef-dump'
        filename:
          type: string
          description: Name of the PluginFile resource.
        contents:
          type: string
          description: Contents of the file.
        tasks:
          type: array
          items:
            type: object
            description: Tasks associated with the PluginFile resource.
            allOf:
            - $ref: '#/components/schemas/PluginTask'
        description:
          type: string
          description: Description of the PluginFile resource.
        plugin:
          type: object
          description: The Plugin resource this file belongs to.
          allOf:
          - $ref: '#/components/schemas/PluginRef'
    PluginTask:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: Name of the PluginTask.
        inputParams:
          type: array
          items:
            type: object
            description: List of input PluginTaskParameters in this PluginTask.
            allOf:
            - $ref: '#/components/schemas/PluginTaskInputParameter-load'
        outputParams:
          type: array
          items:
            type: object
            description: List of output PluginTaskParameters in this PluginTask.
            allOf:
            - $ref: '#/components/schemas/PluginTaskOutputParameter-load'
    PluginTaskInputParameter-load:
      required:
      - name
      - parameterType
      type: object
      properties:
        name:
          type: string
          description: Name of the PluginTaskParameter.
        parameterType:
          type: integer
          description: The ID of the assigned PluginParameterType resource
        required:
          type: boolean
          description: "Sets whether the input parameter is required (True) or optional\
            \ (False). If True, then this parameter must be assigned a value in order\
            \ to execute the PluginTask."
          default: true
    PluginTaskOutputParameter-load:
      required:
      - name
      - parameterType
      type: object
      properties:
        name:
          type: string
          description: Name of the PluginTaskParameter.
        parameterType:
          type: integer
          description: The ID of the assigned PluginParameterType resource
    PluginRef:
      type: object
      properties:
        id:
          type: integer
          description: ID for the Plugin resource.
        group:
          type: object
          description: Group that owns the Plugin resource.
          allOf:
          - $ref: '#/components/schemas/GroupRef'
        url:
          type: string
          description: URL for accessing the full Plugin resource.
        name:
          type: string
          description: Name of the Plugin resource.
    NestedSnapshotsIdPluginFile-dump:
      required:
      - contents
      - filename
      type: object
      properties:
        id:
          type: integer
          description: ID for the PluginFile resource.
        snapshot:
          type: integer
          description: ID for the underlying PluginFile snapshot.
        group:
          type: object
          description: Group that owns the PluginFile resource.
          allOf:
          - $ref: '#/components/schemas/GroupRef'
        user:
          type: object
          description: User that created the PluginFile resource.
          allOf:
          - $ref: '#/components/schemas/UserRef-dump'
        createdOn:
          type: string
          description: Timestamp when the PluginFile resource was created.
          format: date-time
        lastModifiedOn:
          type: string
          description: Timestamp when the PluginFile resource was last modified.
          format: date-time
        latestSnapshot:
          type: boolean
          description: Whether or not the PluginFile resource is the latest version.
        hasDraft:
          type: boolean
          description: Whether a draft exists for the PluginFile resource.
        tags:
          type: array
          items:
            type: object
            description: Tags associated with the PluginFile resource.
            allOf:
            - $ref: '#/components/schemas/TagRef-dump'
        filename:
          type: string
          description: Name of the PluginFile resource.
        contents:
          type: string
          description: Contents of the file.
        tasks:
          type: array
          items:
            type: object
            description: Tasks associated with the PluginFile resource.
            allOf:
            - $ref: '#/components/schemas/PluginTask'
        description:
          type: string
          description: Description of the PluginFile resource.
        plugin:
          type: object
          description: The Plugin resource this file belongs to.
          allOf:
          - $ref: '#/components/schemas/PluginRef'
    Plugin-load:
      required:
      - group
      - name
      type: object
      properties:
        group:
          type: integer
          description: ID of the Group that will own the Plugin resource.
        name:
          type: string
          description: Name of the Plugin resource.
        description:
          type: string
          description: Description of the Plugin resource.
    PluginPage:
      type: object
      properties:
        index:
          type: integer
          description: Index of the current page.
        isComplete:
          type: boolean
          description: Boolean indicating if more data is available.
        totalNumResults:
          type: integer
          description: Total number of results.
        first:
          type: string
          description: URL to first page in results set.
        next:
          type: string
          description: URL to next page in results set.
        prev:
          type: string
          description: URL to last page in results set.
        data:
          type: array
          items:
            type: object
            description: List of Plugin resources in the current page.
            allOf:
            - $ref: '#/components/schemas/Plugin-dump'
    Plugin-dump:
      required:
      - name
      type: object
      properties:
        id:
          type: integer
          description: ID for the Plugin resource.
        snapshot:
          type: integer
          description: ID for the underlying Plugin snapshot.
        group:
          type: object
          description: Group that owns the Plugin resource.
          allOf:
          - $ref: '#/components/schemas/GroupRef'
        user:
          type: object
          description: User that created the Plugin resource.
          allOf:
          - $ref: '#/components/schemas/UserRef-dump'
        createdOn:
          type: string
          description: Timestamp when the Plugin resource was created.
          format: date-time
        lastModifiedOn:
          type: string
          description: Timestamp when the Plugin resource was last modified.
          format: date-time
        latestSnapshot:
          type: boolean
          description: Whether or not the Plugin resource is the latest version.
        hasDraft:
          type: boolean
          description: Whether a draft exists for the Plugin resource.
        tags:
          type: array
          items:
            type: object
            description: Tags associated with the Plugin resource.
            allOf:
            - $ref: '#/components/schemas/TagRef-dump'
        name:
          type: string
          description: Name of the Plugin resource.
        description:
          type: string
          description: Description of the Plugin resource.
        files:
          type: array
          items:
            type: object
            description: Files associated with the Plugin resource.
            allOf:
            - $ref: '#/components/schemas/PluginFileRef'
    PluginFileRef:
      type: object
      properties:
        id:
          type: integer
          description: ID for the PluginFile resource.
        group:
          type: object
          description: Group that owns the PluginFile resource.
          allOf:
          - $ref: '#/components/schemas/GroupRef'
        url:
          type: string
          description: URL for accessing the full PluginFile resource.
        plugin:
          type: integer
          description: ID for the Plugin resource this file belongs to.
        filename:
          type: string
          description: Filename of the PluginFile resource.
    PluginMutableFields:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: Name of the Plugin resource.
        description:
          type: string
          description: Description of the Plugin resource.
    PluginFile-load:
      required:
      - contents
      - filename
      type: object
      properties:
        filename:
          type: string
          description: Name of the PluginFile resource.
        contents:
          type: string
          description: Contents of the file.
        tasks:
          type: array
          items:
            type: object
            description: Tasks associated with the PluginFile resource.
            allOf:
            - $ref: '#/components/schemas/PluginTask'
        description:
          type: string
          description: Description of the PluginFile resource.
    PluginFilePage:
      type: object
      properties:
        index:
          type: integer
          description: Index of the current page.
        isComplete:
          type: boolean
          description: Boolean indicating if more data is available.
        totalNumResults:
          type: integer
          description: Total number of results.
        first:
          type: string
          description: URL to first page in results set.
        next:
          type: string
          description: URL to next page in results set.
        prev:
          type: string
          description: URL to last page in results set.
        data:
          type: array
          items:
            type: object
            description: List of PluginFile resources in the current page.
            allOf:
            - $ref: '#/components/schemas/PluginFile-dump'
    PluginFileMutableFields:
      required:
      - contents
      - filename
      type: object
      properties:
        filename:
          type: string
          description: Name of the PluginFile resource.
        contents:
          type: string
          description: Contents of the file.
        tasks:
          type: array
          items:
            type: object
            description: Tasks associated with the PluginFile resource.
            allOf:
            - $ref: '#/components/schemas/PluginTask'
        description:
          type: string
          description: Description of the PluginFile resource.
    DraftsPlugin-load:
      required:
      - group
      - name
      type: object
      properties:
        group:
          type: integer
          description: ID of the Group that will own the Plugin resource.
        name:
          type: string
          description: Name of the Plugin resource.
        description:
          type: string
          description: Description of the Plugin resource.
    DraftsIdPluginMutableFields:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: Name of the Plugin resource.
        description:
          type: string
          description: Description of the Plugin resource.
    DraftPluginMutableFields:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: Name of the Plugin resource.
        description:
          type: string
          description: Description of the Plugin resource.
    NestedDraftsPluginFile-load:
      required:
      - contents
      - filename
      type: object
      properties:
        filename:
          type: string
          description: Name of the PluginFile resource.
        contents:
          type: string
          description: Contents of the file.
        tasks:
          type: array
          items:
            type: object
            description: Tasks associated with the PluginFile resource.
            allOf:
            - $ref: '#/components/schemas/PluginTask'
        description:
          type: string
          description: Description of the PluginFile resource.
    NestedDraftsIdPluginFile-load:
      required:
      - contents
      - filename
      type: object
      properties:
        filename:
          type: string
          description: Name of the PluginFile resource.
        contents:
          type: string
          description: Contents of the file.
        tasks:
          type: array
          items:
            type: object
            description: Tasks associated with the PluginFile resource.
            allOf:
            - $ref: '#/components/schemas/PluginTask'
        description:
          type: string
          description: Description of the PluginFile resource.
    NestedDraftPluginFile-load:
      required:
      - contents
      - filename
      type: object
      properties:
        filename:
          type: string
          description: Name of the PluginFile resource.
        contents:
          type: string
          description: Contents of the file.
        tasks:
          type: array
          items:
            type: object
            description: Tasks associated with the PluginFile resource.
            allOf:
            - $ref: '#/components/schemas/PluginTask'
        description:
          type: string
          description: Description of the PluginFile resource.
    SnapshotsPluginPage:
      type: object
      properties:
        index:
          type: integer
          description: Index of the current page.
        isComplete:
          type: boolean
          description: Boolean indicating if more data is available.
        totalNumResults:
          type: integer
          description: Total number of results.
        first:
          type: string
          description: URL to first page in results set.
        next:
          type: string
          description: URL to next page in results set.
        prev:
          type: string
          description: URL to last page in results set.
        data:
          type: array
          items:
            type: object
            description: List of Plugin resources in the current page.
            allOf:
            - $ref: '#/components/schemas/Plugin-dump'
    SnapshotsIdPlugin-dump:
      required:
      - name
      type: object
      properties:
        id:
          type: integer
          description: ID for the Plugin resource.
        snapshot:
          type: integer
          description: ID for the underlying Plugin snapshot.
        group:
          type: object
          description: Group that owns the Plugin resource.
          allOf:
          - $ref: '#/components/schemas/GroupRef'
        user:
          type: object
          description: User that created the Plugin resource.
          allOf:
          - $ref: '#/components/schemas/UserRef-dump'
        createdOn:
          type: string
          description: Timestamp when the Plugin resource was created.
          format: date-time
        lastModifiedOn:
          type: string
          description: Timestamp when the Plugin resource was last modified.
          format: date-time
        latestSnapshot:
          type: boolean
          description: Whether or not the Plugin resource is the latest version.
        hasDraft:
          type: boolean
          description: Whether a draft exists for the Plugin resource.
        tags:
          type: array
          items:
            type: object
            description: Tags associated with the Plugin resource.
            allOf:
            - $ref: '#/components/schemas/TagRef-dump'
        name:
          type: string
          description: Name of the Plugin resource.
        description:
          type: string
          description: Description of the Plugin resource.
        files:
          type: array
          items:
            type: object
            description: Files associated with the Plugin resource.
            allOf:
            - $ref: '#/components/schemas/PluginFileRef'
    Queue-load:
      required:
      - group
      - name
      type: object
      properties:
        group:
          type: integer
          description: ID of the Group that will own the Queue resource.
        name:
          type: string
          description: Name of the Queue resource.
        description:
          type: string
          description: Description of the Queue resource.
    QueuePage:
      type: object
      properties:
        index:
          type: integer
          description: Index of the current page.
        isComplete:
          type: boolean
          description: Boolean indicating if more data is available.
        totalNumResults:
          type: integer
          description: Total number of results.
        first:
          type: string
          description: URL to first page in results set.
        next:
          type: string
          description: URL to next page in results set.
        prev:
          type: string
          description: URL to last page in results set.
        data:
          type: array
          items:
            type: object
            description: List of Queue resources in the current page.
            allOf:
            - $ref: '#/components/schemas/Queue-dump'
    Queue-dump:
      required:
      - name
      type: object
      properties:
        id:
          type: integer
          description: ID for the Queue resource.
        snapshot:
          type: integer
          description: ID for the underlying Queue snapshot.
        group:
          type: object
          description: Group that owns the Queue resource.
          allOf:
          - $ref: '#/components/schemas/GroupRef'
        user:
          type: object
          description: User that created the Queue resource.
          allOf:
          - $ref: '#/components/schemas/UserRef-dump'
        createdOn:
          type: string
          description: Timestamp when the Queue resource was created.
          format: date-time
        lastModifiedOn:
          type: string
          description: Timestamp when the Queue resource was last modified.
          format: date-time
        latestSnapshot:
          type: boolean
          description: Whether or not the Queue resource is the latest version.
        hasDraft:
          type: boolean
          description: Whether a draft exists for the Queue resource.
        tags:
          type: array
          items:
            type: object
            description: Tags associated with the Queue resource.
            allOf:
            - $ref: '#/components/schemas/TagRef-dump'
        name:
          type: string
          description: Name of the Queue resource.
        description:
          type: string
          description: Description of the Queue resource.
    QueueMutableFields:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: Name of the Queue resource.
        description:
          type: string
          description: Description of the Queue resource.
    DraftsQueue-load:
      required:
      - group
      - name
      type: object
      properties:
        group:
          type: integer
          description: ID of the Group that will own the Queue resource.
        name:
          type: string
          description: Name of the Queue resource.
        description:
          type: string
          description: Description of the Queue resource.
    DraftsIdQueueMutableFields:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: Name of the Queue resource.
        description:
          type: string
          description: Description of the Queue resource.
    DraftQueueMutableFields:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: Name of the Queue resource.
        description:
          type: string
          description: Description of the Queue resource.
    SnapshotsQueuePage:
      type: object
      properties:
        index:
          type: integer
          description: Index of the current page.
        isComplete:
          type: boolean
          description: Boolean indicating if more data is available.
        totalNumResults:
          type: integer
          description: Total number of results.
        first:
          type: string
          description: URL to first page in results set.
        next:
          type: string
          description: URL to next page in results set.
        prev:
          type: string
          description: URL to last page in results set.
        data:
          type: array
          items:
            type: object
            description: List of Queue resources in the current page.
            allOf:
            - $ref: '#/components/schemas/Queue-dump'
    SnapshotsIdQueue-dump:
      required:
      - name
      type: object
      properties:
        id:
          type: integer
          description: ID for the Queue resource.
        snapshot:
          type: integer
          description: ID for the underlying Queue snapshot.
        group:
          type: object
          description: Group that owns the Queue resource.
          allOf:
          - $ref: '#/components/schemas/GroupRef'
        user:
          type: object
          description: User that created the Queue resource.
          allOf:
          - $ref: '#/components/schemas/UserRef-dump'
        createdOn:
          type: string
          description: Timestamp when the Queue resource was created.
          format: date-time
        lastModifiedOn:
          type: string
          description: Timestamp when the Queue resource was last modified.
          format: date-time
        latestSnapshot:
          type: boolean
          description: Whether or not the Queue resource is the latest version.
        hasDraft:
          type: boolean
          description: Whether a draft exists for the Queue resource.
        tags:
          type: array
          items:
            type: object
            description: Tags associated with the Queue resource.
            allOf:
            - $ref: '#/components/schemas/TagRef-dump'
        name:
          type: string
          description: Name of the Queue resource.
        description:
          type: string
          description: Description of the Queue resource.
    Tag-load:
      type: object
      properties:
        group:
          type: integer
          description: Group that owns the Tag.
        name:
          type: string
          description: Name of the Tag resource.
    TagPage:
      type: object
      properties:
        index:
          type: integer
          description: Index of the current page.
        isComplete:
          type: boolean
          description: Boolean indicating if more data is available.
        totalNumResults:
          type: integer
          description: Total number of results.
        first:
          type: string
          description: URL to first page in results set.
        next:
          type: string
          description: URL to next page in results set.
        prev:
          type: string
          description: URL to last page in results set.
        data:
          type: array
          items:
            type: object
            description: List of Tags in the current page.
            allOf:
            - $ref: '#/components/schemas/Tag-dump'
    Tag-dump:
      type: object
      properties:
        id:
          type: integer
          description: ID for the Tag.
        group:
          type: object
          description: Group that owns the Tag.
          allOf:
          - $ref: '#/components/schemas/GroupRef'
        user:
          type: object
          description: User that created the Tag.
          allOf:
          - $ref: '#/components/schemas/UserRef-dump'
        createdOn:
          type: string
          description: Timestamp when the Tag resource was created.
          format: date-time
        lastModifiedOn:
          type: string
          description: Timestamp when the Tag resource was last modified.
          format: date-time
        name:
          type: string
          description: Name of the Tag resource.
    TagMutableFields:
      type: object
      properties:
        name:
          type: string
          description: Name of the Tag resource.
    ResourceUrlsPage:
      type: object
      properties:
        index:
          type: integer
          description: Index of the current page.
        isComplete:
          type: boolean
          description: Boolean indicating if more data is available.
        totalNumResults:
          type: integer
          description: Total number of results.
        first:
          type: string
          description: URL to first page in results set.
        next:
          type: string
          description: URL to next page in results set.
        prev:
          type: string
          description: URL to last page in results set.
        data:
          type: array
          description: List of Resource URLs in the current page.
          items:
            type: string
    User-load:
      type: object
      properties:
        username:
          type: string
          description: Username of the User.
        email:
          type: string
          description: Email of the User.
        password:
          type: string
          description: Password for the User resource.
        confirmPassword:
          type: string
          description: The password confirmation when creating a new user account.
    UserPage:
      type: object
      properties:
        index:
          type: integer
          description: Index of the current page.
        isComplete:
          type: boolean
          description: Boolean indicating if more data is available.
        totalNumResults:
          type: integer
          description: Total number of results.
        first:
          type: string
          description: URL to first page in results set.
        next:
          type: string
          description: URL to next page in results set.
        prev:
          type: string
          description: URL to last page in results set.
        data:
          type: array
          items:
            type: object
            description: List of User resources in the current page.
            allOf:
            - $ref: '#/components/schemas/User-dump'
    User-dump:
      type: object
      properties:
        username:
          type: string
          description: Username of the User.
        email:
          type: string
          description: Email of the User.
        id:
          type: integer
          description: ID for the User resource.
    UserCurrent-dump:
      type: object
      properties:
        username:
          type: string
          description: Username of the User.
        email:
          type: string
          description: Email of the User.
        id:
          type: integer
          description: ID for the User resource.
        groups:
          type: array
          items:
            type: object
            description: A list of Groups the User is a part of.
            allOf:
            - $ref: '#/components/schemas/GroupRef'
        createdOn:
          type: string
          description: Timestamp when the User resource was created.
          format: date-time
        lastModifiedOn:
          type: string
          description: Timestamp when the User resource was last modified.
          format: date-time
        lastLoginOn:
          type: string
          description: Timestamp when the User resource was last logged in.
          format: date-time
        passwordExpiresOn:
          type: string
          description: Timestamp when the User resource password expires on.
          format: date-time
    UserPassword-load:
      type: object
      properties:
        oldPassword:
          type: string
          description: Old password for the User resource.
        newPassword:
          type: string
          description: New password for the User resource.
        confirmNewPassword:
          type: string
          description: The new password confirmation when changing a password.
    UserDelete:
      type: object
      properties:
        password:
          type: string
          description: The users current password.
    UserMutableFields:
      type: object
      properties:
        username:
          type: string
          description: Username of the User.
        email:
          type: string
          description: Email of the User.
  responses:
    ParseError:
      description: When a mask can't be parsed
      content: {}
    MaskError:
      description: When any error occurs on mask
      content: {}
    BackendDatabaseError:
      content: {}
    SearchNotImplementedError:
      content: {}
    SearchParseError:
      content: {}
    ResourceDoesNotExistError:
      content: {}
    DraftDoesNotExistError:
      content: {}
    DraftAlreadyExistsError:
      content: {}
    ArtifactDoesNotExistError:
      content: {}
    ArtifactAlreadyExistsError:
      content: {}
    EntrypointDoesNotExistError:
      content: {}
    EntrypointPluginDoesNotExistError:
      content: {}
    EntrypointAlreadyExistsError:
      content: {}
    EntrypointParameterNamesNotUniqueError:
      content: {}
    ExperimentAlreadyExistsError:
      content: {}
    ExperimentDoesNotExistError:
      content: {}
    GroupDoesNotExistError:
      content: {}
    GroupNameNotAvailableError:
      content: {}
    JobDoesNotExistError:
      content: {}
    JobInvalidStatusTransitionError:
      content: {}
    JobInvalidParameterNameError:
      content: {}
    JobMlflowRunAlreadySetError:
      content: {}
    ExperimentJobDoesNotExistError:
      content: {}
    EntryPointNotRegisteredToExperimentError:
      content: {}
    QueueNotRegisteredToEntryPointError:
      content: {}
    ModelDoesNotExistError:
      content: {}
    ModelVersionDoesNotExistError:
      content: {}
    ModelAlreadyExistsError:
      content: {}
    PluginParameterTypeMatchesBuiltinTypeError:
      content: {}
    PluginParameterTypeDoesNotExistError:
      content: {}
    PluginParameterTypeReadOnlyLockError:
      content: {}
    PluginParameterTypeMissingParameterError:
      content: {}
    PluginParameterTypeAlreadyExistsError:
      content: {}
    PluginDoesNotExistError:
      content: {}
    PluginAlreadyExistsError:
      content: {}
    PluginFileDoesNotExistError:
      content: {}
    PluginFileAlreadyExistsError:
      content: {}
    PluginTaskParameterTypeNotFoundError:
      content: {}
    PluginTaskNameAlreadyExistsError:
      content: {}
    PluginTaskInputParameterNameAlreadyExistsError:
      content: {}
    PluginTaskOutputParameterNameAlreadyExistsError:
      content: {}
    QueueDoesNotExistError:
      content: {}
    QueueLockedError:
      content: {}
    QueueAlreadyExistsError:
      content: {}
    TagDoesNotExistError:
      content: {}
    TagAlreadyExistsError:
      content: {}
    NoCurrentUserError:
      content: {}
    UserPasswordChangeError:
      content: {}
    UserPasswordChangeSamePasswordError:
      content: {}
    UserPasswordExpiredError:
      content: {}
    UserPasswordVerificationError:
      content: {}
    UserDoesNotExistError:
      content: {}
    UsernameNotAvailableError:
      content: {}
    UserEmailNotAvailableError:
      content: {}
    UserRegistrationError:
      content: {}
x-original-swagger-version: "2.0"
